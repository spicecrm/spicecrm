/** 
 * Â© 2015 - 2021 aac services k.s. All rights reserved.
 * release: 2021.02.001
 * date: 2021-07-16 09:05:07
 * build: 2021.02.001.1626419107136
 **/
"use strict";var __decorate=this&&this.__decorate||function(e,t,s,i){var l,o=arguments.length,r=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,s):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,s,i);else for(var a=e.length-1;0<=a;a--)(l=e[a])&&(r=(o<3?l(r):3<o?l(t,s,r):l(t,s))||r);return 3<o&&r&&Object.defineProperty(t,s,r),r},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpiceImporterModule=exports.SpiceImporter=exports.SpiceImporterResult=exports.SpiceImporterUpdate=exports.SpiceImporterCheck=exports.SpiceImporterFixed=exports.SpiceImporterMap=exports.SpiceImporterSelect=exports.SpiceImporterImportButton=exports.SpiceImporterService=void 0;var core_1=require("@angular/core"),platform_browser_1=require("@angular/platform-browser"),forms_1=require("@angular/forms"),systemcomponents_1=require("../../systemcomponents/systemcomponents"),globalcomponents_1=require("../../globalcomponents/globalcomponents"),objectcomponents_1=require("../../objectcomponents/objectcomponents"),objectfields_1=require("../../objectfields/objectfields"),directives_1=require("../../directives/directives"),services_1=require("../../services/services"),router_1=require("@angular/router"),SpiceImporterService=function(){function e(e){this.language=e,this.fileMapping={},this.fileId="",this.fileName="",this.fileHeader=[],this.checkFields=[],this.fixedFields=[],this.idfield="",this.importDuplicateAction="ignore",this.importAction="new",this.importTemplateAction="none",this.idFieldAction="auto",this.enclosure="none",this.separator="semicolon",this.fileTooBig=!1,this.savedImports=[],this.fileRows="",this.currentImportStep=0,this.result={},this.importStepsText=["LBL_SELECT_UPLOAD_FILE","LBL_MAP_FIELDS","LBL_ADD_FIXED_FIELDS","LBL_DUPLICATE_CHECK","LBL_RESULTS"]}return Object.defineProperty(e.prototype,"stepLongText",{get:function(){return this.language.getLabel(this.importStepsText[this.currentImportStep],"","long")},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"idField",{get:function(){return this.idfield},set:function(e){this.fileMapping[e]&&delete this.fileMapping[e],this.idfield=e},enumerable:!1,configurable:!0}),e.prototype.resetSettings=function(){this.fileMapping={},this.fixedFields=[],this.checkFields=[],this.idField="",this.result={}},e.prototype.addFixed=function(){this.fixedFields.push({field:void 0})},e.prototype.getFixed=function(e){e=this.fixedFields.indexOf(e);return-1<e?this.fixedFields[e].field:""},e.prototype.setFixedField=function(e,t){this.fixedFields[e].field=t},e.prototype.removeFixed=function(e){this.fixedFields.splice(e,1)},e.prototype.addCheck=function(){this.checkFields.push({field:void 0})},e.prototype.getCheckField=function(e){return this.checkFields[e]&&this.checkFields[e].field?this.checkFields[e].field:""},e.prototype.setCheckField=function(e,t){this.checkFields[e].field=t},e.prototype.removeCheck=function(e){this.checkFields.splice(e,1)},e.prototype.getMapping=function(e){return this.fileMapping&&this.fileMapping[e]?this.fileMapping[e]:""},e.prototype.setMapping=function(e,t){""!=t?this.fileMapping[e]=t:delete this.fileMapping[e]},e.prototype.setSavedImport=function(s){var i=this;this.resetSettings(),this.savedImports.some(function(e){if(e.id===s){for(var t in e.mappings)e.mappings.hasOwnProperty(t)&&-1!=i.fileHeader.indexOf(t)&&(i.fileMapping[t]=e.mappings[t]);return i.fixedFields=e.fixed,i.checkFields=e.checks,!0}})},__decorate([core_1.Injectable(),__metadata("design:paramtypes",[services_1.language])],e)}();exports.SpiceImporterService=SpiceImporterService;var SpiceImporterImportButton=function(){function SpiceImporterImportButton(e,t,s,i,l){this.language=e,this.metadata=t,this.model=s,this.router=i,this.layout=l}return SpiceImporterImportButton.prototype.execute=function(){this.router.navigate(["/import/"+this.model.module])},Object.defineProperty(SpiceImporterImportButton.prototype,"disabled",{get:function(){return!this.metadata.checkModuleAcl(this.model.module,"import")||"small"==this.layout.screenwidth},enumerable:!1,configurable:!0}),__decorate([core_1.Component({selector:"spice-importer-import-button",template:'<span><system-label label="LBL_IMPORT"></system-label></span>'}),__metadata("design:paramtypes",[services_1.language,services_1.metadata,services_1.model,router_1.Router,services_1.layout])],SpiceImporterImportButton)}();exports.SpiceImporterImportButton=SpiceImporterImportButton;var SpiceImporterSelect=function(){function e(e,t,s,i){this.spiceImport=e,this.toast=t,this.backend=s,this.language=i,this.templateNameSet=new core_1.EventEmitter,this.importActionSet=new core_1.EventEmitter,this.isLoading=!1,this.enclosureOptions=[{label:"'",value:"single"},{label:" ",value:"none"},{label:'"',value:"double"}]}return Object.defineProperty(e.prototype,"templateName",{get:function(){return this.spiceImport.templateName},set:function(e){this.spiceImport.templateName=e,this.templateNameSet.emit(e)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"importAction",{get:function(){return this.spiceImport.importAction},set:function(e){this.spiceImport.importAction=e,this.importActionSet.emit(e),this.spiceImport.idField="",this.templateName=void 0,this.resetOptions(),this.spiceImport.resetSettings()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"importTemplateAction",{get:function(){return this.spiceImport.importTemplateAction},set:function(e){"choose"!=(this.spiceImport.importTemplateAction=e)&&this.spiceImport.resetSettings()},enumerable:!1,configurable:!0}),e.prototype.resetOptions=function(){this.spiceImport.importDuplicateAction="ignore",this.spiceImport.importTemplateAction="none",this.spiceImport.idFieldAction="auto"},e.prototype.setSavedImport=function(e){this.spiceImport.setSavedImport(e.srcElement.value)},e.prototype.clearFile=function(){this.spiceImport.fileName="",this.spiceImport.fileId="",this.spiceImport.fileHeader=[],this.spiceImport.fileData=void 0,this.spiceImport.fileRows="",this.spiceImport.fileTooBig=!1,this.spiceImport.resetSettings()},e.prototype.loadFilePreview=function(e){var t=this;if(!e.file_mime_type.toLowerCase().includes("excel"))return this.toast.sendToast(this.language.getLabel("MSG_ONLY_CSV_ALLOWED"),"error"),e.remove();this.isLoading=!0,this.spiceImport.fileName=e.file_name,this.spiceImport.fileId=e.file_md5;var s={file_md5:e.file_md5,enclosure:this.spiceImport.enclosure,separator:this.spiceImport.separator};this.backend.getRequest("module/SpiceImports/filepreview",s).subscribe(function(e){t.isLoading=!1,t.spiceImport.fileHeader=e.fileHeader,t.spiceImport.fileData=e.fileData,t.spiceImport.fileRows=e.fileRows,t.spiceImport.fileTooBig=e.fileTooBig,e.fileTooBig&&t.toast.sendToast(t.language.getLabel("MSG_FILE_ROWS_TOO_LARGE"),"warning","",!1)},function(){t.isLoading=!1,t.toast.sendToast(t.language.getLabel("ERR_CANT_READ_FILE_DATA"),"error","",!1),e.remove()})},__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"templateNameSet",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"importActionSet",void 0),__decorate([core_1.Component({selector:"spice-importer-select",template:'<div class="slds-grid slds-wrap slds-height_full"><div class="slds-p-horizontal--small slds-size--1-of-4 slds-border--right slds-height_full"><div class="slds-text-body--regular slds-box slds-m-top--small slds-text-color--weak" style="padding: .25rem">{{ spiceImport.stepLongText }}</div><div class="slds-form slds-size--1-of-1"><div class="slds-form-element slds-m-vertical--medium"><div class="slds-form-element__control slds-grid"><div class="slds-grow" style="min-width: 0"><system-input-file [ngModel]="spiceImport.fileData" (ngModelChange)="loadFilePreview($event)" (onRemove)="clearFile()" accept=".csv" class="slds-size--1-of-1"></system-input-file></div><div *ngIf="!spiceImport.fileData" class="slds-grid slds-m-around--x-small"><fieldset class="slds-form-element"><div class="slds-form-element__control"><system-input-radio-button-group [(ngModel)]="spiceImport.separator" [inputOptions]="[{label: \';\', value: \'semicolon\'}, {label: \',\', value: \'comma\'}]"></system-input-radio-button-group></div><legend class="slds-form-element__legend slds-form-element__label"><system-label label="LBL_SEPARATOR"></system-label></legend></fieldset><fieldset class="slds-form-element"><div class="slds-form-element__control"><system-input-radio-button-group [(ngModel)]="spiceImport.enclosure" [inputOptions]="enclosureOptions"></system-input-radio-button-group></div><legend class="slds-form-element__legend slds-form-element__label"><system-label label="LBL_ENCLOSURE"></system-label></legend></fieldset></div></div></div><div class="slds-form-element slds-m-vertical--medium"><legend class="slds-form-element__legend slds-form-element__label"><system-label label="LBL_IMPORT_ACTION"></system-label></legend><div class="slds-form-element__control"><span class="slds-radio"><input type="radio" id="importactionnew" name="options" value="new" [(ngModel)]="importAction"> <label class="slds-radio__label" for="importactionnew"><span class="slds-radio--faux"></span> <span class="slds-form-element__label"><system-label label="LBL_LOAD_NEW_RECORDS"></system-label></span></label></span> <span class="slds-radio"><input type="radio" id="importactionupdate" name="options" value="update" [(ngModel)]="importAction"> <label class="slds-radio__label" for="importactionupdate"><span class="slds-radio--faux"></span> <span class="slds-form-element__label"><system-label label="LBL_UPDATE_EXISTING_RECORDS"></system-label></span></label></span></div></div><div [hidden]="!spiceImport.fileId" class="slds-form-element slds-m-vertical--medium"><legend class="slds-form-element__legend slds-form-element__label"><system-label label="LBL_IMPORT_TEMPLATE"></system-label></legend><div class="slds-form-element__control"><span class="slds-radio"><input type="radio" id="importtemplatenone" value="none" name="template" [(ngModel)]="importTemplateAction"> <label class="slds-radio__label" for="importtemplatenone"><span class="slds-radio--faux"></span> <span class="slds-form-element__label">none</span></label></span> <span *ngIf="spiceImport.savedImports?.length > 0" class="slds-radio"><input type="radio" id="importtemplatechoose" value="choose" name="template" [(ngModel)]="importTemplateAction"> <label class="slds-radio__label" for="importtemplatechoose"><span class="slds-radio--faux"></span> <span class="slds-form-element__label"><system-label label="LBL_SELECT"></system-label></span></label></span> <span class="slds-radio"><input type="radio" id="importtemplatesave" value="new" name="template" [(ngModel)]="importTemplateAction"> <label class="slds-radio__label" for="importtemplatesave"><span class="slds-radio--faux"></span> <span class="slds-form-element__label"><system-label label="LBL_SAVE_AS"></system-label></span></label></span></div></div><div *ngIf="importTemplateAction==\'choose\' && spiceImport.fileId" class="slds-form-element slds-m-vertical--medium"><label class="slds-form-element__label">{{language.getLabel(\'LBL_SELECT_TEMPLATE\', \'\', \'short\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" (change)="setSavedImport($event)"><option></option><option *ngFor="let savedImport of spiceImport.savedImports" [value]="savedImport.id">{{savedImport.name}}</option></select></div></div></div><div *ngIf="importTemplateAction==\'new\'" class="slds-form-element slds-m-vertical--medium"><div class="slds-form-element"><label class="slds-form-element__label"><system-label label="LBL_TEMPLATE_NAME"></system-label></label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="templateName"></div></div></div></div></div><div [system-overlay-loading-spinner]="isLoading" class="slds-size--3-of-4 slds-height_full"><table *ngIf="spiceImport.fileHeader.length > 0" class="slds-table slds-table--bordered slds-table--cell-buffer"><thead><tr class="slds-text-title--caps slds-p-vertical--small"><th scope="col"><div style="font-weight: 600" class="slds-truncate slds-p-vertical--xx-small"><system-label label="LBL_HEADER"></system-label></div></th><th colspan="2" scope="col"><div style="font-weight: 600" class="slds-truncate slds-p-vertical--xx-small"><system-label label="LBL_RECORDS"></system-label> ({{spiceImport.fileRows}})</div></th></tr></thead><tbody><tr *ngFor="let row of spiceImport.fileHeader; let columnindex = index"><td scope="row"><div class="slds-truncate">{{row}}</div></td><td *ngFor="let record of spiceImport.fileData"><div class="slds-truncate">{{record[columnindex]}}</div></td></tr></tbody></table></div></div>'}),__metadata("design:paramtypes",[SpiceImporterService,services_1.toast,services_1.backend,services_1.language])],e)}();exports.SpiceImporterSelect=SpiceImporterSelect;var SpiceImporterMap=function(){function e(e,t,s,i){this.spiceImport=e,this.language=t,this.metadata=s,this.model=i,this.modelFields=void 0,this.requiredModelFields=void 0}return Object.defineProperty(e.prototype,"idFieldAction",{get:function(){return this.spiceImport.idFieldAction},set:function(e){"auto"==(this.spiceImport.idFieldAction=e)&&(this.spiceImport.idField="")},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"description",{get:function(){return this.spiceImport.stepLongText},enumerable:!1,configurable:!0}),e.prototype.getMapping=function(e){return this.spiceImport.getMapping(e)},e.prototype.setMapping=function(e,t){this.spiceImport.setMapping(e,t.srcElement.value)},e.prototype.checkRequired=function(t){var e=_.invert(this.spiceImport.fileMapping).hasOwnProperty(t),s=this.spiceImport.fixedFields.some(function(e){return e.field==t});return e||s},e.prototype.isChosen=function(e){return!!_.invert(this.spiceImport.fileMapping)[e]},e.prototype.trackByFn=function(e,t){return e},__decorate([core_1.Input("modelfields"),__metadata("design:type",Array)],e.prototype,"modelFields",void 0),__decorate([core_1.Input("requiredmodelfields"),__metadata("design:type",Array)],e.prototype,"requiredModelFields",void 0),__decorate([core_1.Component({selector:"spice-importer-map",template:'<div class="slds-grid slds-wrap slds-height_full"><div class="slds-p-horizontal--small slds-size--1-of-4 slds-border--right slds-height_full"><div class="slds-text-body--regular slds-box slds-m-vertical--small slds-text-color--weak" style="padding: .25rem">{{ spiceImport.stepLongText }}</div><div *ngIf="modelFields && this.spiceImport.importAction == \'new\'"><legend class="slds-form-element__legend slds-form-element__label"><system-label label="MSG_REQUIRED_MAPPED_FIXED"></system-label></legend><div class="slds-tile__detail slds-text-body--small slds-p-horizontal--small"><div class="slds-grid" *ngFor="let field of this.requiredModelFields; trackBy: trackByFn"><span class="slds-truncate">{{ field.displayname }}</span> <span class="slds-col--bump-left slds-truncate"><system-button-icon [ngClass]="{\'slds-text-color_success\' : checkRequired(field.name), \'slds-text-color--error\': !checkRequired(field.name)}" [icon]="checkRequired(field.name) ? \'success\' : \'record\'"></system-button-icon></span></div></div></div><div class="slds-m-vertical--x-small"><fieldset class="slds-form-element slds-m-top--small"><legend class="slds-form-element__legend slds-form-element__label"><system-label label="LBL_UNIQUE_FIELD"></system-label></legend><div class="slds-form-element__control"><span class="slds-radio"><input type="radio" id="idFieldAuto" name="idFieldOptions" value="auto" [(ngModel)]="idFieldAction"> <label class="slds-radio__label" for="idFieldAuto"><span class="slds-radio_faux"></span> <span class="slds-form-element__label"><system-label label="LBL_HAVE_NO_ID"></system-label></span></label></span> <span class="slds-radio"><input type="radio" id="idFieldHave" name="idFieldOptions" value="have" [(ngModel)]="idFieldAction"> <label class="slds-radio__label" for="idFieldHave"><span class="slds-radio_faux"></span> <span class="slds-form-element__label"><system-label label="LBL_ALREAD_HAVE_ID"></system-label></span></label></span></div></fieldset><div *ngIf="idFieldAction == \'have\'" class="slds-form-element slds-m-vertical--small"><label class="slds-form-element__label" for="idFieldSelect"><system-label label="LBL_SELECT_ID_FIELD"></system-label></label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" id="idFieldSelect" [(ngModel)]="spiceImport.idField"><option></option><option *ngFor="let field of spiceImport.fileHeader; trackBy: trackByFn" [value]="field">{{ field }}</option></select></div></div></div></div></div><div class="slds-size--3-of-4 slds-height_full"><table *ngIf="spiceImport.fileHeader.length > 0" class="slds-table slds-table--bordered slds-table--cell-buffer"><thead><tr class="slds-text-title--caps"><th scope="col" colspan="2"><div style="font-weight: 600" class="slds-truncate slds-p-vertical--xx-small"><system-label label="LBL_HEADER"></system-label></div></th><th scope="col"><div style="font-weight: 600" class="slds-truncate slds-p-vertical--xx-small">{{ model.module }} <system-label label="LBL_FIELDS"></system-label></div></th><th colspan="2" scope="col"><div style="font-weight: 600" class="slds-truncate slds-p-vertical--xx-small"><system-label label="LBL_RECORDS"></system-label> ({{spiceImport.fileRows}})</div></th></tr></thead><tbody><tr *ngFor="let row of spiceImport.fileHeader; let columnindex = index; trackBy: trackByFn"><td scope="row" class="slds-p-right--none slds-p-left--none slds-text-align_center" width="22px"><div class="slds-text-align_center slds-p-around--xx-small"><system-button-icon *ngIf="spiceImport.idField == row" size="small" [icon]="\'lock\'"></system-button-icon></div></td><td scope="row"><div class="slds-truncate">{{row}}</div></td><td><div class="slds-truncate"><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [disabled]="spiceImport.idField == row" [value]="spiceImport.idField == row ? \'\' : getMapping(row)" (change)="setMapping(row, $event)"><option></option><ng-container *ngFor="let field of modelFields; trackBy: trackByFn"><option [disabled]="isChosen(field.name)" [value]="field.name">{{field.displayname}}</option></ng-container></select></div></div></div></td><td *ngFor="let record of spiceImport.fileData; trackBy: trackByFn"><div class="slds-truncate">{{record[columnindex]}}</div></td></tr></tbody></table></div></div>'}),__metadata("design:paramtypes",[SpiceImporterService,services_1.language,services_1.metadata,services_1.model])],e)}();exports.SpiceImporterMap=SpiceImporterMap;var SpiceImporterFixed=function(){function e(e,t,s,i,l){this.spiceImport=e,this.language=t,this.metadata=s,this.model=i,this.view=l,this.view.isEditable=!0,this.view.setEditMode()}return Object.defineProperty(e.prototype,"currentImportStep",{set:function(e){2==e&&this.getFilteredModuleFields()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"modelFields",{get:function(){return this.modelfields},set:function(e){this.modelfields=e,this.filteredModuleFileds=e},enumerable:!1,configurable:!0}),e.prototype.getFilteredModuleFields=function(){var t=_.invert(this.spiceImport.fileMapping);this.filteredModuleFileds=this.modelFields.filter(function(e){return!t.hasOwnProperty(e.name)})},e.prototype.setFixedField=function(e,t){this.spiceImport.setFixedField(e,t)},e.prototype.getFixed=function(e){return this.spiceImport.getFixed(e)},e.prototype.removeFixed=function(e){this.model.data=_.omit(this.model.data,this.spiceImport.fixedFields[e].field),this.spiceImport.removeFixed(e)},e.prototype.checkRequired=function(t){var e=_.invert(this.spiceImport.fileMapping).hasOwnProperty(t),s=this.spiceImport.fixedFields.some(function(e){return e.field==t});return e||s},e.prototype.isChosen=function(e){return!!_.invert(this.spiceImport.fileMapping)[e]},__decorate([core_1.Input("requiredmodelfields"),__metadata("design:type",Array)],e.prototype,"requiredModelFields",void 0),__decorate([core_1.Input("currentimportstep"),__metadata("design:type",Number),__metadata("design:paramtypes",[Number])],e.prototype,"currentImportStep",null),__decorate([core_1.Input("modelfields"),__metadata("design:type",Array),__metadata("design:paramtypes",[Array])],e.prototype,"modelFields",null),__decorate([core_1.Component({selector:"spice-importer-fixed",template:'<div class="slds-grid slds-wrap slds-height_full"><div class="slds-p-horizontal--small slds-size--1-of-4 slds-border--right slds-height_full"><div class="slds-text-body--regular slds-box slds-m-vertical--small slds-text-color--weak" style="padding: .25rem">{{ spiceImport.stepLongText }}</div><div *ngIf="modelFields && this.spiceImport.importAction == \'new\'"><legend class="slds-form-element__legend slds-form-element__label"><system-label label="MSG_REQUIRED_MAPPED_FIXED"></system-label></legend><div class="slds-tile__detail slds-text-body--small slds-p-horizontal--small"><div class="slds-grid" *ngFor="let field of this.requiredModelFields"><span class="slds-truncate">{{ field.displayname }}</span> <span class="slds-col--bump-left slds-truncate"><system-button-icon [ngClass]="{\'slds-text-color_success\' : checkRequired(field.name), \'slds-text-color--error\': !checkRequired(field.name)}" [icon]="checkRequired(field.name) ? \'success\' : \'record\'"></system-button-icon></span></div></div></div></div><div class="slds-size--3-of-4 slds-height_full"><table *ngIf="spiceImport.fileHeader.length > 0" class="slds-table slds-table--bordered slds-table--cell-buffer"><thead><tr class="slds-text-title--caps"><th scope="col" width="50%"><div class="slds-truncate slds-p-vertical--xx-small" style="font-weight: 600"><system-label label="LBL_FIELD"></system-label></div></th><th scope="col" width="50%"><div class="slds-truncate slds-p-vertical--xx-small" style="font-weight: 600"><system-label label="LBL_VALUE"></system-label></div></th><th scope="col"></th></tr></thead><tbody><tr *ngFor="let row of spiceImport.fixedFields; let rowIndex = index;"><td><div class="slds-truncate"><div class="slds-form-element__control"><div><select class="slds-select" [disabled]="getFixed(row)" [value]="getFixed(row)" (change)="setFixedField(rowIndex, $event.srcElement.value)"><option></option><option *ngFor="let field of filteredModuleFileds" [disabled]="isChosen(field.name)" [value]="field.name">{{field.displayname}}</option></select></div></div></div></td><td><div class="slds-truncate"><div *ngIf="row.field" class="slds-form-element__control"><field-container [field]="row.field"></field-container></div></div></td><td><button class="slds-button slds-button--icon" (click)="removeFixed(rowIndex)"><system-button-icon [icon]="\'clear\'" [size]="\'large\'"></system-button-icon></button></td></tr></tbody></table><div class="slds-grid slds-grid--align-center slds-p-vertical--xx-small"><button type="button" class="slds-button slds-button--brand" (click)="spiceImport.addFixed()"><system-label label="LBL_ADD_FIXED_FIELDS" length="short"></system-label></button></div></div></div>',providers:[services_1.view]}),__metadata("design:paramtypes",[SpiceImporterService,services_1.language,services_1.metadata,services_1.model,services_1.view])],e)}();exports.SpiceImporterFixed=SpiceImporterFixed;var SpiceImporterCheck=function(){function e(e,t,s,i){this.language=e,this.metadata=t,this.model=s,this.spiceImporter=i}return Object.defineProperty(e.prototype,"fileMapping",{get:function(){return this.spiceImporter.fileMapping},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"importDuplicateAction",{get:function(){return this.spiceImporter.importDuplicateAction},set:function(e){this.spiceImporter.importDuplicateAction=e,this.setCheckFields(e)},enumerable:!1,configurable:!0}),e.prototype.setCheckFields=function(e){if("log"==e)for(var t in this.spiceImporter.checkFields=[],this.fileMapping)this.fileMapping.hasOwnProperty(t)&&this.spiceImporter.checkFields.push({mappedField:t,moduleField:this.fileMapping[t]});else this.spiceImporter.checkFields=[]},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"currentImportStep",void 0),__decorate([core_1.Component({selector:"spice-importer-check",template:'<div class="slds-grid slds-wrap slds-height_full"><div class="slds-p-horizontal--small slds-size--1-of-4 slds-border--right slds-height_full"><div class="slds-text-body--regular slds-box slds-m-top--small slds-text-color--weak" style="padding: .25rem">{{ spiceImporter.stepLongText }}</div><div class="slds-form slds-m-around--medium"><div class="slds-form-element slds-m-vertical--medium"><legend class="slds-form-element__legend slds-form-element__label"><system-label label="LBL_DUPLICATE_ACTION"></system-label></legend><div class="slds-form-element__control"><span class="slds-radio"><input type="radio" id="importduplicateactionignore" name="duplicateoptions" value="ignore" [(ngModel)]="importDuplicateAction"> <label class="slds-radio__label" for="importduplicateactionignore"><span class="slds-radio--faux"></span> <span class="slds-form-element__label"><system-label label="LBL_IGNORE_DUPLICATE"></system-label></span></label></span> <span class="slds-radio"><input type="radio" id="importduplicateactionlog" name="duplicateoptions" value="log" [(ngModel)]="importDuplicateAction"> <label class="slds-radio__label" for="importduplicateactionlog"><span class="slds-radio--faux"></span> <span class="slds-form-element__label"><system-label label="LBL_LOG_DUPLICATES"></system-label></span></label></span></div></div></div></div><div class="slds-p-horizontal--small slds-size--3-of-4 slds-height_full"></div></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.metadata,services_1.model,SpiceImporterService])],e)}();exports.SpiceImporterCheck=SpiceImporterCheck;var SpiceImporterUpdate=function(){function e(e,t,s,i){this.language=e,this.metadata=t,this.model=s,this.spiceImport=i,this.checkFields=[]}return Object.defineProperty(e.prototype,"fileMapping",{get:function(){return this.spiceImport.fileMapping},enumerable:!1,configurable:!0}),e.prototype.setCheckedField=function(t,e,s){s.target.checked?(this.spiceImport.checkFields=this.spiceImport.checkFields.filter(function(e){return e.mappedField!==t}),this.spiceImport.checkFields.push({mappedField:t,moduleField:e})):this.spiceImport.checkFields=this.spiceImport.checkFields.filter(function(e){return e.mappedField!==t})},e.prototype.getCheckedField=function(t){return this.spiceImport.checkFields.some(function(e){return e.mappedField==t})},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"currentImportStep",void 0),__decorate([core_1.Component({selector:"spice-importer-update",template:'<div class="slds-grid slds-wrap slds-height_full"><div class="slds-p-horizontal--small slds-size--1-of-4 slds-border--right slds-height_full"><div class="slds-text-body--regular slds-box slds-m-top--small slds-text-color--weak" style="padding: .25rem"><system-button-icon class="slds-m-right--xx-small" size="small" [icon]="\'lock\'"></system-button-icon>{{ spiceImport.stepLongText }}</div></div><div *ngIf="spiceImport.fileHeader?.length > 0" class="slds-size--3-of-4 slds-height_full"><table class="slds-table slds-table--bordered slds-table--cell-buffer" style="border-top: none"><thead><tr class="slds-text-title--caps"><th scope="row"><system-button-icon size="small" [icon]="\'lock\'"></system-button-icon></th><th scope="col"><div class="slds-truncate slds-p-vertical--x-small"><div class="slds-form-element__control" style="font-weight: 600"><system-label label="LBL_MAPPED_FIELDS"></system-label></div></div></th><th scope="col"><div class="slds-truncate slds-p-vertical--x-small" style="font-weight: 600">{{ model.module }} <system-label label="LBL_FIELDS"></system-label></div></th></tr></thead><tbody><tr><td scope="row"><span class="slds-checkbox"><input type="checkbox" id="idField" [checked]="getCheckedField(spiceImport.idField)" (change)="setCheckedField(spiceImport.idField, \'id\', $event)"> <label class="slds-checkbox__label" for="idField"><span class="slds-checkbox_faux"></span></label></span></td><td scope="row"><div class="slds-truncate">{{ spiceImport.idField }}</div></td><td scope="row"><div class="slds-truncate">id</div></td></tr><tr *ngFor="let field of fileMapping | objectkeyvalues"><td scope="row"><span class="slds-checkbox"><input type="checkbox" id="{{field.key}}" [checked]="getCheckedField(field.key)" (change)="setCheckedField(field.key, field.value, $event)"> <label class="slds-checkbox__label" for="{{field.key}}"><span class="slds-checkbox_faux"></span></label></span></td><td scope="row"><div class="slds-truncate">{{ field.key }}</div></td><td scope="row"><div class="slds-truncate">{{field.value}}</div></td></tr></tbody></table></div></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.metadata,services_1.model,SpiceImporterService])],e)}();exports.SpiceImporterUpdate=SpiceImporterUpdate;var SpiceImporterResult=function(){function SpiceImporterResult(e,t,s,i,l,o,r){this.spiceImport=e,this.toast=t,this.language=s,this.session=i,this.configurationService=l,this.model=o,this.router=r}return SpiceImporterResult.prototype.goToRecord=function(e){this.router.navigate(["/module/"+this.model.module+"/"+e])},__decorate([core_1.ViewChild("fileupload",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],SpiceImporterResult.prototype,"fileupload",void 0),__decorate([core_1.Component({selector:"spice-importer-result",template:'<div class="slds-wrap slds-height_full"><div class="slds-height_full"><table *ngIf="spiceImport.result && spiceImport.result.list && spiceImport.result.list.length > 0" class="slds-table slds-table--bordered slds-table--cell-buffer"><thead><tr class="slds-text-title--caps"><th scope="col"><div style="font-weight: 600" class="slds-truncate"><system-label label="LBL_STATUS"></system-label></div></th><th colspan="4" scope="col"><div style="font-weight: 600" class="slds-truncate"><system-label label="LBL_DATA"></system-label></div></th></tr></thead><tbody><tr [ngStyle]="{\'cursor\': row.recordId ? \'pointer\': \'initial\'}" *ngFor="let row of spiceImport.result.list; let row = row" (click)="row.recordId ? goToRecord(row.recordId): false"><td scope="row"><div class="slds-truncate">{{row.status}}</div></td><td *ngFor="let recordData of row.data"><div class="slds-truncate">{{recordData}}</div></td></tr></tbody></table></div></div>',styles:[":host {height: 100%;}"]}),__metadata("design:paramtypes",[SpiceImporterService,services_1.toast,services_1.language,services_1.session,services_1.configurationService,services_1.model,router_1.Router])],SpiceImporterResult)}();exports.SpiceImporterResult=SpiceImporterResult;var SpiceImporter=function(){function SpiceImporter(e,t,s,i,l,o,r,a){this.spiceImporter=e,this.language=t,this.metadata=s,this.model=i,this.navigationtab=l,this.router=o,this.backend=r,this.toast=a,this.importSteps=["select","map","fixed","check","result"],this.importAction="new",this.processing=!1,this.modelFields=void 0,this.requiredModelFields=void 0,this.model.module=this.navigationtab.activeRoute.params.module,this.metadata.checkModuleAcl(this.model.module,"import")||(this.toast.sendToast(this.language.getLabel("MSG_NOT_AUTHORIZED_TO_IMPORT")+" "+this.language.getModuleName(this.model.module),"error"),this.router.navigate(["/module/"+this.model.module])),this.getModuleFields()}return Object.defineProperty(SpiceImporter.prototype,"templateName",{get:function(){return this.templatename},set:function(e){this.templatename=e},enumerable:!1,configurable:!0}),Object.defineProperty(SpiceImporter.prototype,"currentImportStep",{get:function(){return this.spiceImporter.currentImportStep},enumerable:!1,configurable:!0}),SpiceImporter.prototype.ngOnInit=function(){var t=this;this.navigationtab.setTabInfo({displayname:this.language.getLabel("LBL_IMPORT"),displaymodule:this.model.module}),this.backend.getRequest("module/SpiceImports/savedimports/"+this.model.module).subscribe(function(e){t.spiceImporter.savedImports=e})},SpiceImporter.prototype.getModuleFields=function(){if(""!==this.model.module){this.modelFields=[];var e,t,s=this.metadata.getModuleFields(this.model.module);for(e in s)s.hasOwnProperty(e)&&("link"===(t=s[e]).type||"relate"===t.type||"email1"!=t.name&&"non-db"===t.source||"id"==t.name||(t.vname?t.displayname=this.language.getLabel(this.model.module,t.vname)+" ("+t.name+")":t.displayname=t.name,this.modelFields.push(t)))}this.requiredModelFields=this.modelFields.filter(function(e){return"id"!=e.name&&e.required})},SpiceImporter.prototype.setImportAction=function(e){var t;switch(this.importAction=e){case"new":t=this.importSteps.indexOf("update"),this.importSteps[t]="check",this.spiceImporter.importStepsText[t]="LBL_DUPLICATE_CHECK";break;case"update":t=this.importSteps.indexOf("check"),this.importSteps[t]="update",this.spiceImporter.importStepsText[t]="LBL_UPDATE_EXISTING_RECORDS"}},SpiceImporter.prototype.getCurrentStep=function(){return this.language.getLabel(this.spiceImporter.importStepsText[this.spiceImporter.currentImportStep])},SpiceImporter.prototype.gotoModule=function(){this.router.navigate(["/module/"+this.model.module])},SpiceImporter.prototype.getContainerStyle=function(){return{height:"calc(100vh - "+this.contentcontainer.element.nativeElement.getBoundingClientRect().top+"px)","overflow-y":"auto"}},SpiceImporter.prototype.getStepClass=function(e){e=this.importSteps.indexOf(e);return e==this.spiceImporter.currentImportStep?"slds-is-active":e<this.spiceImporter.currentImportStep?"slds-is-completed":void 0},SpiceImporter.prototype.getStepComplete=function(e){return this.importSteps.indexOf(e)<this.spiceImporter.currentImportStep},SpiceImporter.prototype.getProgressBarWidth=function(){return{width:this.spiceImporter.currentImportStep/(this.importSteps.length-1)*100+"%"}},SpiceImporter.prototype.nextStep=function(){switch(this.spiceImporter.currentImportStep){case 0:if(""===this.spiceImporter.fileName)return this.toast.sendToast(this.language.getLabel("MSG_SELECT_VALID_FILE"),"error");if("choose"==this.spiceImporter.importTemplateAction&&Object.keys(this.spiceImporter.fileMapping).length<=0&&0==this.spiceImporter.checkFields.length&&0==this.spiceImporter.fixedFields.length)return this.toast.sendToast(this.language.getLabel("LBL_MAKE_SELECTION"),"error");if("new"==this.spiceImporter.importTemplateAction&&!this.templateName)return this.toast.sendToast(this.language.getLabel("MSG_INPUT_REQUIRED"),"error");this.spiceImporter.currentImportStep++;break;case 1:if(Object.keys(this.spiceImporter.fileMapping).length<=0)return this.toast.sendToast(this.language.getLabel("MSG_MAP_FIELDS"),"error");if("have"==this.spiceImporter.idFieldAction&&""==this.spiceImporter.idField)return this.toast.sendToast(this.language.getLabel("LBL_MAKE_SELECTION"),"error");this.spiceImporter.currentImportStep++;break;case 2:for(var e=0,t=this.spiceImporter.fixedFields;e<t.length;e++){var s=t[e];if(!this.model.data.hasOwnProperty(s.field))return this.toast.sendToast(this.language.getLabel("MSG_INPUT_REQUIRED"),"error");if(this.model.data[s.field].length<1)return this.toast.sendToast(this.language.getLabel("MSG_INPUT_REQUIRED"),"error")}if(!this.checkRequiredMapped()&&"new"==this.spiceImporter.importAction)return this.toast.sendToast(this.language.getLabel("MSG_MAP_FIELDS"),"error");this.spiceImporter.currentImportStep++;break;case 3:if("update"==this.importAction&&this.spiceImporter.checkFields.length<1)return this.toast.sendToast(this.language.getLabel("LBL_MAKE_SELECTION"),"error");this.import();break;case 4:this.gotoModule(),this.spiceImporter.currentImportStep=0;break;default:this.spiceImporter.currentImportStep++}},SpiceImporter.prototype.checkRequiredMapped=function(){for(var e=_.invert(this.spiceImporter.fileMapping),t=0,s={},i=0,l=this.spiceImporter.fixedFields;i<l.length;i++){var o=l[i];s[o.field]=o.field}for(var r=0,a=this.requiredModelFields;r<a.length;r++){var d=a[r];"id"!=d.name&&(e[d.name]&&t++,s[d.name]&&t++)}return this.requiredModelFields.length==t},SpiceImporter.prototype.prevStep=function(){0<this.spiceImporter.currentImportStep&&this.spiceImporter.currentImportStep--},SpiceImporter.prototype.showNext=function(){return this.spiceImporter.currentImportStep<this.importSteps.length-2},SpiceImporter.prototype.showImport=function(){return this.spiceImporter.currentImportStep==this.importSteps.length-2},SpiceImporter.prototype.showExit=function(){return this.spiceImporter.currentImportStep==this.importSteps.length-1},SpiceImporter.prototype.import=function(){var t=this,e=this.prepareObjectImport();this.spiceImporter.result={},this.processing=!0,this.backend.postRequest("module/SpiceImports/import",{objectimport:e}).subscribe(function(e){switch(e.status){case"imported":t.spiceImporter.result=e;break;case"scheduled":t.gotoModule(),t.toast.sendToast(e.msg,"success");break;case"error":t.toast.sendToast(e.msg,"error","",!1)}t.processing=!1,t.spiceImporter.currentImportStep++})},SpiceImporter.prototype.prepareObjectImport=function(){var e=_.pick(this.spiceImporter,"fileName","fileId","fileHeader","fileMapping","templateName","fileTooBig","enclosure","separator","checkFields","importAction","idFieldAction","idField","fixedFields","importDuplicateAction");return e.fixedFieldsValues=this.model.data,e.module=this.model.module,""!=this.spiceImporter.idField&&(e.fileMapping[this.spiceImporter.idField]="id"),"have"==e.idFieldAction&&(e.checkFields=[{mappedField:this.spiceImporter.idField,moduleField:"id"}]),e},__decorate([core_1.ViewChild("contentcontainer",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],SpiceImporter.prototype,"contentcontainer",void 0),__decorate([core_1.Component({template:'<div class="slds-page-header"><div class="slds-grid"><div class="slds-col slds-has-flexi-truncate"><div class="slds-media slds-no-space slds-grow"><system-icon [module]="model.module"></system-icon><div class="slds-media__body"><nav role="navigation" aria-label="Breadcrumbs"><ol class="slds-breadcrumb slds-list--horizontal"><li class="slds-breadcrumb__item slds-text-title--caps"><a href="javascript:void(0);" (click)="gotoModule()"><system-label-modulename [module]="model.module"></system-label-modulename></a></li><li class="slds-breadcrumb__item slds-text-title--caps"><a href="javascript:void(0);"><system-label label="LBL_IMPORT"></system-label></a></li><li *ngIf="currentImportStep >= 1" class="slds-breadcrumb__item slds-text-title--caps slds-p-left--x-small">{{ spiceImporter.importAction == \'new\' ? language.getLabel(\'LBL_LOAD_NEW_RECORDS\'): language.getLabel(\'LBL_UPDATE_EXISTING_RECORDS\')}}</li></ol></nav><div><h1 class="slds-page-header__title slds-m-right--small slds-align-middle slds-truncate">{{getCurrentStep()}}</h1></div></div></div></div></div></div><div class="slds-grid slds-grid--align-spread slds-p-around--small slds-theme--shade slds-border--bottom"><button class="slds-button slds-button--neutral" [disabled]="showExit()" (click)="prevStep()" [ngClass]="{\'slds-hide\': !currentImportStep}"><system-label label="LBL_PREVIOUS"></system-label></button><div class="slds-progress slds-progress--shade"><ol class="slds-progress__list"><li *ngFor="let importStep of importSteps" class="slds-progress__item" [ngClass]="getStepClass(importStep)"><button class="slds-button slds-progress__marker" [ngClass]="{\'slds-button--icon slds-progress__marker--icon\': getStepComplete(importStep)}"><span class="slds-assistive-text">{{importStep}}</span><system-button-icon *ngIf="getStepComplete(importStep)" [icon]="\'success\'"></system-button-icon></button></li></ol><div class="slds-progress-bar slds-progress-bar_x-small"><span class="slds-progress-bar__value" [ngStyle]="getProgressBarWidth()"></span></div></div><button *ngIf="showNext()" class="slds-button slds-button--neutral" (click)="nextStep()"><system-label label="LBL_NEXT"></system-label></button> <button *ngIf="showImport()" [disabled]="processing" class="slds-button slds-button--brand slds-grid slds-grid_vertical-align-center" (click)="nextStep()"><span *ngIf="!processing" class="slds-p-right--xx-small">{{spiceImporter.importAction == \'new\' ? language.getLabel(\'LBL_IMPORT\'): language.getLabel(\'LBL_UPDATE\') }}</span> <span *ngIf="processing" class="slds-p-right--xx-small">{{spiceImporter.importAction == \'new\' ? language.getLabel(\'LBL_IMPORTING\'): language.getLabel(\'LBL_UPDATING\') }}</span><system-spinner *ngIf="processing" inverse="true" [size]="16"></system-spinner></button> <button *ngIf="showExit()" class="slds-button slds-button--brand" (click)="nextStep()"><system-label label="LBL_CLOSE"></system-label></button></div><div #contentcontainer class="slds-scrollable--y" [ngStyle]="getContainerStyle()"><spice-importer-select (templateNameSet)="templateName = $event" (importActionSet)="setImportAction($event)" [hidden]="currentImportStep!==0"></spice-importer-select><spice-importer-map [modelfields]="modelFields" [requiredmodelfields]="requiredModelFields" [hidden]="currentImportStep!==1"></spice-importer-map><spice-importer-fixed [modelfields]="modelFields" [requiredmodelfields]="requiredModelFields" [hidden]="currentImportStep!==2" [currentimportstep]="currentImportStep"></spice-importer-fixed><spice-importer-check *ngIf="currentImportStep === 3 && spiceImporter.importAction == \'new\'"></spice-importer-check><spice-importer-update *ngIf="currentImportStep === 3 && spiceImporter.importAction == \'update\'"></spice-importer-update><spice-importer-result [hidden]="currentImportStep!==4"></spice-importer-result></div>',providers:[services_1.model,SpiceImporterService]}),__metadata("design:paramtypes",[SpiceImporterService,services_1.language,services_1.metadata,services_1.model,services_1.navigationtab,router_1.Router,services_1.backend,services_1.toast])],SpiceImporter)}();exports.SpiceImporter=SpiceImporter;var SpiceImporterModule=function(){function SpiceImporterModule(){}return __decorate([core_1.NgModule({imports:[platform_browser_1.BrowserModule,forms_1.FormsModule,systemcomponents_1.SystemComponents,globalcomponents_1.GlobalComponents,objectcomponents_1.ObjectComponents,objectfields_1.ObjectFields,directives_1.DirectivesModule],declarations:[SpiceImporter,SpiceImporterSelect,SpiceImporterMap,SpiceImporterFixed,SpiceImporterCheck,SpiceImporterUpdate,SpiceImporterResult,SpiceImporterImportButton],exports:[SpiceImporter,SpiceImporterImportButton],entryComponents:[SpiceImporter,SpiceImporterImportButton],providers:[SpiceImporterService]})],SpiceImporterModule)}();exports.SpiceImporterModule=SpiceImporterModule;