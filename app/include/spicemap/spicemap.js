/** 
 * Â© 2015 - 2021 aac services k.s. All rights reserved.
 * release: 2021.02.001
 * date: 2021-07-16 09:05:07
 * build: 2021.02.001.1626419107136
 **/
"use strict";var __extends=this&&this.__extends||function(){var o=function(e,t){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s])})(e,t)};return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),__assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,s=1,o=arguments.length;s<o;s++)for(var i in t=arguments[s])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)},__decorate=this&&this.__decorate||function(e,t,s,o){var i,n=arguments.length,r=n<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,s):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,s,o);else for(var a=e.length-1;0<=a;a--)(i=e[a])&&(r=(n<3?i(r):3<n?i(t,s,r):i(t,s))||r);return 3<n&&r&&Object.defineProperty(t,s,r),r},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ModuleSpiceMap=exports.SpiceGoogleMapsDirectionModal=exports.SpiceMapGeoDataField=exports.SpiceGoogleMaps=exports.SpiceMapSelector=exports.SpiceGoogleMapsRecord=exports.SpiceGoogleMapsRecordContainer=exports.SpiceGoogleMapsList=exports.SpiceGoogleMapsListHeader=exports.SpiceMap=void 0;var common_1=require("@angular/common"),core_1=require("@angular/core"),forms_1=require("@angular/forms"),directives_1=require("../../directives/directives"),objectfields_1=require("../../objectfields/objectfields"),globalcomponents_1=require("../../globalcomponents/globalcomponents"),objectcomponents_1=require("../../objectcomponents/objectcomponents"),systemcomponents_1=require("../../systemcomponents/systemcomponents"),services_1=require("../../services/services"),router_1=require("@angular/router"),rxjs_1=require("rxjs"),SpiceMap=function(){function SpiceMap(e,t,s,o,i,n,r,a){this.zone=e,this.language=t,this.model=s,this.modelutilities=o,this.backend=i,this.router=n,this.metadata=r,this.libloader=a,this.componentconfig={},this.map={},this.circle={},this.mousedown=!1,this.mapBoundaries={},this.modelMarker={},this.surroundingFunction={},this.surroundingMarkers=[],this.surroundingObjects=[],this.listfields=[]}return SpiceMap.prototype.getListFields=function(){return this.metadata.getFieldSetFields(this.componentconfig.fieldset)},SpiceMap.prototype.ngAfterViewInit=function(){var t=this;this.libloader.loadLib("maps.googleapis").subscribe(function(e){t.renderMap()})},Object.defineProperty(SpiceMap.prototype,"latField",{get:function(){return this.componentconfig.key&&""!=this.componentconfig.key?this.componentconfig.key+"_address_latitude":"address_latitude"},enumerable:!1,configurable:!0}),Object.defineProperty(SpiceMap.prototype,"lngField",{get:function(){return this.componentconfig.key&&""!=this.componentconfig.key?this.componentconfig.key+"_address_longitude":"address_longitude"},enumerable:!1,configurable:!0}),Object.defineProperty(SpiceMap.prototype,"lat",{get:function(){return this.model.data[this.latField]},enumerable:!1,configurable:!0}),Object.defineProperty(SpiceMap.prototype,"lng",{get:function(){return this.model.data[this.lngField]},enumerable:!1,configurable:!0}),SpiceMap.prototype.renderMap=function(){var e=this,t={lat:48.2,lng:16.3};this.lng&&this.lat&&(t={lat:this.lat,lng:this.lng}),this.map=new google.maps.Map(this.mapelement.element.nativeElement,{center:t,scrollwheel:!0,zoom:14,minZoom:8}),this.lng&&this.lat&&(this.modelMarker=new google.maps.Marker({position:t,map:this.map,icon:"https://maps.google.com/mapfiles/ms/micons/red-dot.png",title:this.model.data.summary_text})),this.map.addListener("bounds_changed",function(){e.mapBoundaries=e.map.getBounds(),e.surroundingFunction&&window.clearTimeout(e.surroundingFunction),e.surroundingFunction=window.setTimeout(function(){return e.getSurrounding()},500)})},SpiceMap.prototype.reCenter=function(){this.map.setCenter(this.modelMarker.position)},SpiceMap.prototype.isApiLoaded=function(){return window.google&&window.google.maps},SpiceMap.prototype.getSurrounding=function(){for(var i=this,e=0,t=this.surroundingMarkers;e<t.length;e++)t[e].setMap(null);this.surroundingMarkers=[];var s=this.mapBoundaries.getNorthEast(),o=this.mapBoundaries.getSouthWest(),o={join:"AND",conditions:[{field:"id",operator:"<>",value:this.model.id},{field:this.lngField,operator:"<",value:s.lng()},{field:this.latField,operator:"<",value:s.lat()},{field:this.lngField,operator:">",value:o.lng()},{field:this.latField,operator:">",value:o.lat()}]},o={searchfields:JSON.stringify(o),fields:JSON.stringify(["id","name",this.lngField,this.latField])};this.backend.getRequest("module/"+this.model.module,o).subscribe(function(e){for(var t in e.list){for(var s in e.list[t])e.list[t][s]=i.modelutilities.backend2spice(i.model.module,s,e.list[t][s]);var o=new google.maps.Marker({position:{lat:e.list[t][i.latField],lng:e.list[t][i.lngField]},map:i.map,title:e.list[t].summary_text,icon:"http://maps.google.com/mapfiles/ms/micons/green.png",sugarId:e.list[t].id,sugarModule:i.model.module});i.surroundingMarkers.push(o)}i.surroundingObjects=e.list,i.zone.run(function(){})})},SpiceMap.prototype.mouseOver=function(t){this.surroundingMarkers.some(function(e){if(e.sugarId===t)return e.setIcon("http://maps.google.com/mapfiles/ms/micons/yellow-dot.png"),!0})},SpiceMap.prototype.mouseOut=function(t){this.surroundingMarkers.some(function(e){if(e.sugarId===t)return e.setIcon("http://maps.google.com/mapfiles/ms/micons/green.png"),!0})},__decorate([core_1.ViewChild("mapelement",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],SpiceMap.prototype,"mapelement",void 0),__decorate([core_1.Component({selector:"spice-map",template:'<article class="slds-card slds-card_boundary slds-m-bottom--medium"><div class="slds-card__header slds-grid"><header class="slds-media slds-media--center slds-has-flexi-truncate"><div class="slds-media__body slds-truncate"><h2><span class="slds-text-heading--small"><system-label label="LBL_MAP_VIEW"></system-label> ({{surroundingObjects.length}})</span></h2></div></header><div class="slds-button-group" role="group"><button class="slds-button slds-button--neutral" (click)="reCenter()"><system-label label="LBL_RECENTER"></system-label></button></div></div><div class="slds-card__body slds-p-horizontal--small"><div #mapelement style="width: 100%; height: 400px; border-radius: 4px; overflow: hidden;"></div><div class="slds-p-top--small"><table class="slds-table slds-table--bordered slds-table--fixed-layout"><thead><tr class="slds-text-title--caps"><th *ngFor="let item of getListFields()" class="slds-is-sortable" scope="col"><a href="javascript:void(0);" class="slds-th__action slds-text-link--reset"><span class="slds-truncate"><system-label-fieldname [module]="model.module" [field]="item.field" [fieldconfig]="item.fieldconfig"></system-label-fieldname></span></a></th><th class="slds-cell-shrink" scope="col"></th></tr></thead><tbody><tr object-related-list-item *ngFor="let surroundingObject of surroundingObjects" [module]="model.module" [listfields]="getListFields()" [listitem]="surroundingObject" class="slds-hint-parent" (mouseenter)="mouseOver(surroundingObject.id)" (mouseleave)="mouseOut(surroundingObject.id)"></tr></tbody></table></div></div></article>'}),__metadata("design:paramtypes",[core_1.NgZone,services_1.language,services_1.model,services_1.modelutilities,services_1.backend,router_1.Router,services_1.metadata,services_1.libloader])],SpiceMap)}();exports.SpiceMap=SpiceMap;var SpiceGoogleMapsListHeader=function(){function e(e,t,s,o){this.language=e,this.modellist=t,this.metadata=s,this.element=o,this.searchTerm="",this.searchTermOld="",this.searchTimeOut=void 0,this.subscriptions=new rxjs_1.Subscription,this.usedSearchTerm=new core_1.EventEmitter}return Object.defineProperty(e.prototype,"requestfields",{get:function(){for(var e=[],t=0,s=this.modellist.listfields;t<s.length;t++){var o=s[t];-1!=e.indexOf(o.field)&&e.push(o.field)}return e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"relateFilter",{get:function(){return this.modellist.relatefilter},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"relateFilterActive",{get:function(){var e;return null===(e=this.relateFilter)||void 0===e?void 0:e.active},set:function(e){this.relateFilter.active=e,this.modellist.relatefilter.active=e,this.modellist.reLoadList()},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){this.searchTerm=this.modellist.searchTerm,this.searchTermOld=this.modellist.searchTerm},e.prototype.ngOnDestroy=function(){this.subscriptions.unsubscribe()},e.prototype.doSearch=function(){this.searchTermOld=this.searchTerm,this.modellist.searchTerm=this.searchTerm,this.modellist.getListData()},e.prototype.triggerSearch=function(e){var t=this;this.searchTerm!==this.searchTermOld&&("Enter"===e.key?0<this.searchTerm.length&&(this.searchTimeOut&&window.clearTimeout(this.searchTimeOut),this.doSearch()):(this.searchTimeOut&&window.clearTimeout(this.searchTimeOut),this.searchTimeOut=window.setTimeout(function(){return t.doSearch()},1e3)))},__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],e.prototype,"usedSearchTerm",void 0),__decorate([core_1.Component({selector:"spice-google-maps-list-header",template:'<div class="slds-form-element slds-p-top--medium slds-p-horizontal--medium slds-m-bottom--small slds-grid slds-grid--vertical-align-center"><object-list-types></object-list-types><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right slds-grow"><system-utility-icon icon="search" size="x-small" addclasses="slds-input__icon"></system-utility-icon><input type="text" id="lookup" class="slds-input" [(ngModel)]="searchTerm" autocomplete="search-term" (keyup)="triggerSearch($event)" [placeholder]="language.getModuleName(modellist.module)"></div><button class="slds-button slds-button--neutral slds-button--icon-border slds-m-horizontal--xxx-small" (click)="modellist.reLoadList()"><system-button-icon icon="refresh"></system-button-icon></button><object-listview-aggregates-button></object-listview-aggregates-button></div><div class="slds-theme--shade slds-p-around--x-small slds-border--top slds-grid slds-grid--vertical-align-center slds slds-grid--align-spread"><object-listview-header-details></object-listview-header-details><system-checkbox *ngIf="relateFilter && relateFilter.id" [disabled]="relateFilter.required" [(ngModel)]="relateFilterActive"><system-label label="LBL_RELATED_TO"></system-label> <system-label-modulename [module]="relateFilter.module" [singular]="true"></system-label-modulename> {{relateFilter.display}}</system-checkbox></div>',changeDetection:core_1.ChangeDetectionStrategy.OnPush}),__metadata("design:paramtypes",[services_1.language,services_1.modellist,services_1.metadata,core_1.ElementRef])],e)}();exports.SpiceGoogleMapsListHeader=SpiceGoogleMapsListHeader;var SpiceGoogleMapsList=function(){function SpiceGoogleMapsList(e,t,s,o,i,n,r,a){this.language=e,this.modelList=t,this.metadata=s,this.iterableDiffers=o,this.cdRef=i,this.model=n,this.navigation=r,this.broadcast=a,this.editingRadius=!1,this.searchAroundActive=!1,this.lngName="longitude",this.latName="latitude",this.subscriptions=new rxjs_1.Subscription,this.mapOptions={},this.records=[]}return Object.defineProperty(SpiceGoogleMapsList.prototype,"isLoading",{get:function(){return this.modelList.isLoading},enumerable:!1,configurable:!0}),Object.defineProperty(SpiceGoogleMapsList.prototype,"canLoadMore",{get:function(){return this.modelList.listData.list.length<this.modelList.listData.totalcount},enumerable:!1,configurable:!0}),SpiceGoogleMapsList.prototype.ngOnInit=function(){this.loadComponentConfigs(),this.subscribeToModelListChanges(),this.subscribeToBroadcastMessages()},SpiceGoogleMapsList.prototype.ngAfterViewInit=function(){this.setMapOptionChanged("circle")},SpiceGoogleMapsList.prototype.ngOnDestroy=function(){this.subscriptions.unsubscribe(),this.modelList.searchGeo=void 0},SpiceGoogleMapsList.prototype.setRecords=function(){var t=this;this.records=this.latName&&this.lngName?this.modelList.listData.list.filter(function(e){return t.verifyLatLng({lat:e[t.latName],lng:e[t.lngName]})}).map(function(e){return{id:e.id,module:t.modelList.module,title:""+e.summary_text,lng:+e[t.lngName],lat:+e[t.latName]}}):[],this.cdRef.detectChanges()},SpiceGoogleMapsList.prototype.loadComponentConfigs=function(){this.componentconfig||(this.componentconfig=this.metadata.getComponentConfig("SpiceGoogleMapsList",this.modelList.module)),this.componentconfig||(this.componentconfig={}),this.componentconfig.radiusPercentage&&!isNaN(this.componentconfig.radiusPercentage)||(this.componentconfig.radiusPercentage=80),this.componentconfig.directionTravelMode&&-1!=["DRIVING","WALKING","TRANSIT","BICYCLING"].indexOf(this.componentconfig.directionTravelMode)||(this.componentconfig.directionTravelMode="DRIVING"),this.componentconfig.mapHeight||(this.componentconfig.mapHeight=500),this.componentconfig.circleColor||(this.componentconfig.circleColor="#CA1B21"),this.componentconfig.filterCircleColor||(this.componentconfig.filterCircleColor="#1A73E8"),this.componentconfig.focusColor||(this.componentconfig.focusColor="#1A73E8"),this.setMapOptionsFromComponentConfig(),this.setLatLngFieldsNames()},SpiceGoogleMapsList.prototype.onRadiusChange=function(e){var t=this;this.mapOptions.circle&&(this.mapOptions.circle.radius=e,this.cdRef.detectChanges()),this.editingRadius||(this.modelList.searchGeo={radius:e,lat:this.mapOptions.circle.center.lat,lng:this.mapOptions.circle.center.lng},this.modelList.reLoadList(!0).subscribe(function(){t.setRecords()}))},SpiceGoogleMapsList.prototype.onCenterChange=function(e){this.mapOptions.circle&&(this.mapOptions.circle.center=e)},SpiceGoogleMapsList.prototype.setMapOptionChanged=function(e){var t;this.mapOptions.changed=((t={})[e]=!0,t),this.mapOptions=__assign({},this.mapOptions),this.cdRef.detectChanges()},SpiceGoogleMapsList.prototype.verifyLatLng=function(e){return!(!e.lng||isNaN(e.lng)||!e.lat||isNaN(e.lat))},SpiceGoogleMapsList.prototype.handleBroadcastMessage=function(t){var e;("map.focus"==t.messagetype||"map.defocus"==t.messagetype)&&t.messagedata&&t.messagedata.record&&this.navigation.activeTab==t.messagedata.tabId&&(this.focusedRecordId=void 0,this.cdRef.detectChanges(),"map.defocus"==t.messagetype?(this.mapOptions.circle=void 0,this.searchAroundActive=!1,this.setMapOptionChanged("circle")):(e=this.records.find(function(e){return e.id==t.messagedata.record.id}))?this.focusedRecordId=e.id:(this.mapOptions.circle={center:{lat:t.messagedata.record.data[this.latName],lng:t.messagedata.record.data[this.lngName]},draggable:!0,editable:!0,radius:null,radiusPercentage:this.componentconfig.radiusPercentage,color:this.componentconfig.circleColor},this.searchAroundActive=!0,this.startRadiusEditing(!0),this.setMapOptionChanged("circle")),this.cdRef.detectChanges())},SpiceGoogleMapsList.prototype.subscribeToBroadcastMessages=function(){var t=this;this.subscriptions.add(this.broadcast.message$.subscribe(function(e){t.handleBroadcastMessage(e)}))},SpiceGoogleMapsList.prototype.setMapOptionsFromComponentConfig=function(){this.mapOptions={showCluster:this.componentconfig.showCluster,markerWithModelPopover:this.componentconfig.markerWithModelPopover,popoverComponent:this.componentconfig.popoverComponent,focusColor:this.componentconfig.focusColor,showMyLocation:this.componentconfig.showMyLocation}},SpiceGoogleMapsList.prototype.setLatLngFieldsNames=function(){var e=this.metadata.getModuleDefs(this.modelList.module);e&&e.ftsgeo&&(this.lngName=e.ftsgeo.longitude_field,this.latName=e.ftsgeo.latitude_field)},SpiceGoogleMapsList.prototype.setFixedCircle=function(){var e=this.modelList.getFilterDefs().geography;if(!e||!this.verifyLatLng(e)||!e.radius||isNaN(e.radius))return this.mapOptions.fixedCircle=void 0,this.setMapOptionChanged("fixedCircle");this.mapOptions.fixedCircle={radius:e.radius,center:{lng:e.lng,lat:e.lat},color:this.componentconfig.filterCircleColor},this.setMapOptionChanged("fixedCircle")},SpiceGoogleMapsList.prototype.subscribeToModelListChanges=function(){var t=this;this.subscriptions.add(this.modelList.listType$.subscribe(function(e){t.handleListTypeChange(e)})),this.subscriptions.add(this.modelList.listDataChanged$.subscribe(function(){t.setRecords(),t.setFixedCircle()}))},SpiceGoogleMapsList.prototype.handleListTypeChange=function(e){"SpiceGoogleMapsList"==e.listcomponent&&this.setRecords()},SpiceGoogleMapsList.prototype.loadMore=function(){this.modelList.loadMoreList()},SpiceGoogleMapsList.prototype.toggleSearchAround=function(){this.searchAroundActive=!this.searchAroundActive,this.searchAroundActive?(this.mapOptions.circle={center:null,draggable:!0,editable:!0,radius:null,radiusPercentage:this.componentconfig.radiusPercentage,color:this.componentconfig.circleColor},this.startRadiusEditing(!0)):(this.mapOptions.circle=void 0,this.editingRadius=!1,this.modelList.searchGeo=void 0,this.modelList.reLoadList(!0)),this.setMapOptionChanged("circle")},SpiceGoogleMapsList.prototype.startRadiusEditing=function(e){this.editingRadius=!0,this.mapOptions.circle.editable=!0,this.mapOptions.circle.draggable=!0,e||this.setMapOptionChanged("circleEditable")},SpiceGoogleMapsList.prototype.cancelEditingRadius=function(){this.editingRadius=!1,this.mapOptions.circle.editable=!1,this.mapOptions.circle.draggable=!1,this.setMapOptionChanged("circleEditable")},SpiceGoogleMapsList.prototype.confirmRadiusInput=function(){this.cancelEditingRadius(),this.setMapOptionChanged("circleRadius")},__decorate([core_1.Input(),__metadata("design:type",Object)],SpiceGoogleMapsList.prototype,"componentconfig",void 0),__decorate([core_1.Component({selector:"spice-google-maps-list",template:'<div class="slds-grid slds-height_full"><div [system-overlay-loading-spinner]="isLoading" class="slds-grid slds-grid--vertical slds-height_full slds-size--1-of-2 slds-border--right"><spice-google-maps [options]="mapOptions" [records]="records" [focusedRecordId]="focusedRecordId" (radiusChange)="onRadiusChange($event)" (centerChange)="onCenterChange($event)" style="display: block" class="slds-grow"></spice-google-maps><div class="slds-grid slds-grid--vertical-align-center slds-theme--shade slds-p-around--xx-small slds-border--bottom slds-border--top slds-border--left slds-border--right"><span class="slds-truncate slds-grow">( {{records.length}} ) <system-label label="MSG_RECORDS_FOUND_WITH_GEO_DATA"></system-label></span> <a *ngIf="canLoadMore" (click)="loadMore()" class="slds-text-link slds-m-left--x-small"><system-label label="LBL_MORE"></system-label></a> <button (click)="toggleSearchAround()" [class.slds-button--brand]="searchAroundActive" system-title="LBL_SEARCH_AROUND" class="slds-button slds-button--icon-border slds-m-left--x-small" style="height: 32px;padding: 0;width: 32px;"><system-button-icon icon="choice" size="medium"></system-button-icon></button><ng-container *ngIf="searchAroundActive"><div *ngIf="editingRadius && !!mapOptions.circle" class="slds-grid slds-grow"><div class="slds-grid slds-grid--vertical-align-center slds-grow"><div class="slds-slider slds-p-horizontal--x-small slds-grow"><input type="range" min="0" max="100" class="slds-slider__range" [(ngModel)]="mapOptions.circle.radius" (ngModelChange)="setMapOptionChanged(\'circleRadius\')"></div><input type="number" [(ngModel)]="mapOptions.circle.radius" (ngModelChange)="setMapOptionChanged(\'circleRadius\')" class="slds-input" style="width: 40px; padding: .3rem; height: 32px; min-height: 32px;"> <span class="slds-p-horizontal--x-small">km</span></div><div class="slds-button-group slds-m-left--xx-small"><button (click)="cancelEditingRadius()" system-title="LBL_CANCEL" class="slds-button slds-button--icon-border-filled" style="height: 32px;padding: 0;width: 32px;"><system-button-icon icon="close" size="medium"></system-button-icon></button> <button (click)="confirmRadiusInput()" system-title="LBL_CONFIRM" class="slds-button slds-button--icon-border-filled" style="height: 32px;padding: 0;width: 32px;"><system-button-icon icon="check" size="medium"></system-button-icon></button></div></div><div *ngIf="!editingRadius" class="slds-align-middle slds-m-left--x-small slds-grid slds-grow"><span class="slds-truncate">{{mapOptions.circle?.radius + \'km around \' + mapOptions.circle?.center?.address}}</span> <button style="float: right" class="slds-button slds-button--icon slds-m-left--xx-small" (click)="startRadiusEditing()"><system-button-icon [icon]="\'edit\'"></system-button-icon></button></div></ng-container></div></div><div class="slds-size--1-of-2 slds-height_full slds-grid slds-grid--vertical"><spice-google-maps-list-header *ngIf="!!componentconfig.showListHeader"></spice-google-maps-list-header><div style="display: block; width: 100%; min-height: 0;" class="slds-grow slds-is-relative"><object-list class="slds-grow slds-height_full slds-size--1-of-1" style="display: block"></object-list><div @animatepanel *ngIf="modelList.displayAggregates" class="slds-is-absolute slds-panel slds-panel--filters slds-filters__body slds-nowrap slds-scrollable--y" style="width: 320px; height: 100%; top:0; right: 0;z-index: 99;" [system-model-provider]="{module: modelList.module}"><div class="slds-filters__body slds-grid_vertical"><div class="slds-m-vertical--xx-small" *ngFor="let aggregate of modelList.moduleAggregates"><object-listview-aggregate [aggregate]="aggregate"></object-listview-aggregate></div></div></div></div></div></div>',changeDetection:core_1.ChangeDetectionStrategy.OnPush}),__metadata("design:paramtypes",[services_1.language,services_1.modellist,services_1.metadata,core_1.IterableDiffers,core_1.ChangeDetectorRef,services_1.model,services_1.navigation,services_1.broadcast])],SpiceGoogleMapsList)}();exports.SpiceGoogleMapsList=SpiceGoogleMapsList;var SpiceGoogleMapsRecordContainer=function(){function SpiceGoogleMapsRecordContainer(e,t,s,o,i){this.model=e,this.cdRef=t,this.broadcast=s,this.modelList=o,this.metadata=i,this.subscription=new rxjs_1.Subscription,this.hasGeoData=!1}return SpiceGoogleMapsRecordContainer.prototype.ngOnInit=function(){this.initializeModelList(),this.loadComponentConfigs(),this.subscribeToModelChanges(),this.checkModelHasGeoData()},SpiceGoogleMapsRecordContainer.prototype.ngOnDestroy=function(){this.subscription.unsubscribe()},SpiceGoogleMapsRecordContainer.prototype.verifyLatLng=function(e){return!(!e.lng||isNaN(e.lng)||!e.lat||isNaN(e.lat))},SpiceGoogleMapsRecordContainer.prototype.initializeModelList=function(){this.modelList.initialize(this.model.module,"SpiceGoogleMapsRecordContainer")},SpiceGoogleMapsRecordContainer.prototype.loadComponentConfigs=function(){this.componentconfig||(this.componentconfig=this.metadata.getComponentConfig("SpiceGoogleMapsRecordContainer",this.model.module)),this.componentconfig||(this.componentconfig={}),this.componentconfig.radiusPercentage&&!isNaN(this.componentconfig.radiusPercentage)||(this.componentconfig.radiusPercentage=80),this.componentconfig.directionTravelMode&&-1!=["DRIVING","WALKING","TRANSIT","BICYCLING"].indexOf(this.componentconfig.directionTravelMode)||(this.componentconfig.directionTravelMode="DRIVING"),this.componentconfig.mapHeight||(this.componentconfig.mapHeight=500),this.componentconfig.circleColor||(this.componentconfig.circleColor="#CA1B21"),this.componentconfig.filterCircleColor||(this.componentconfig.filterCircleColor="#1A73E8"),this.componentconfig.focusColor||(this.componentconfig.focusColor="#1A73E8")},SpiceGoogleMapsRecordContainer.prototype.subscribeToModelChanges=function(){var t=this;this.subscription=this.broadcast.message$.subscribe(function(e){"model.save"==e.messagetype&&e.messagedata.module===t.model.module&&t.checkModelHasGeoData()})},SpiceGoogleMapsRecordContainer.prototype.checkModelHasGeoData=function(){var e,t=this.metadata.getModuleDefs(this.model.module);t&&t.ftsgeo?(e=t.ftsgeo.longitude_field,t=t.ftsgeo.latitude_field,this.hasGeoData=this.verifyLatLng({lat:this.model.getField(t),lng:this.model.getField(e)})):this.hasGeoData=!1,this.cdRef.detectChanges()},__decorate([core_1.Component({selector:"spice-google-maps-record-container",template:'<ng-container *ngIf="hasGeoData; else hasNoGeoDataContainer"><spice-google-maps-record [componentconfig]="componentconfig"></spice-google-maps-record></ng-container><ng-template #hasNoGeoDataContainer><div class="slds-grid slds-grid_vertical-align-center slds-height_full slds-grid--align-center slds-p-around--large"><system-illustration-no-data><system-label label="MSG_RECORD_HAS_NO_GEO_DATA"></system-label></system-illustration-no-data></div></ng-template>',changeDetection:core_1.ChangeDetectionStrategy.OnPush,providers:[services_1.modellist]}),__metadata("design:paramtypes",[services_1.model,core_1.ChangeDetectorRef,services_1.broadcast,services_1.modellist,services_1.metadata])],SpiceGoogleMapsRecordContainer)}();exports.SpiceGoogleMapsRecordContainer=SpiceGoogleMapsRecordContainer;var SpiceGoogleMapsRecord=function(f){function e(e,t,s,o,i,n,r,a,l,c,d,p,u,g,h){var m=f.call(this,e,t,s,i,n,l,u,p)||this;return m.language=e,m.modelList=t,m.metadata=s,m.backend=o,m.iterableDiffers=i,m.cdRef=n,m.zone=r,m.session=a,m.model=l,m.elementRef=c,m.renderer=d,m.broadcast=p,m.navigation=u,m.toast=g,m.userpreferences=h,m.routes=[],m.mapOptions={},m.useMapForOptions=[{icon:"search",value:"search"},{icon:"travel_and_places",value:"direction"}],m.directionStartOptions=[{value:"myLocation",label:"LBL_MY_LOCATION"},{value:"office",label:"LBL_OFFICE"},{value:"address",label:"LBL_ADDRESS"}],m.autoMapHeight=!1,m.unitSystem="METRIC",m.isLoadingDirection=!1,m.isFullScreenOn=!1,m.showUseMapOptions=!0,m._useMapFor="search",m._listSearchTerm="",m}return __extends(e,f),Object.defineProperty(e.prototype,"applyUseMapOptions",{set:function(e){this.showUseMapOptions=e.search&&e.direction,this._useMapFor=e.search?"search":"direction"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"useMapFor",{get:function(){return this._useMapFor},set:function(e){this.isLoadingDirection||this.modelList.isLoading||(this._useMapFor=e,this.records=[],this.directionStartType=void 0,this.directionResult=void 0,this.adjustMap())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"mapHeight",{get:function(){return this.isFullScreenOn||this.autoMapHeight?"search"==this._useMapFor?"50%":"100%":this.componentconfig.mapHeight+"px"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"listSearchTerm",{get:function(){return this._listSearchTerm},set:function(e){var t=this;window.clearTimeout(this.searchTimeout),e!==this._listSearchTerm?(this._listSearchTerm=e,this.zone.runOutsideAngular(function(){t.searchTimeout=window.setTimeout(function(){return t.triggerSearch()},1e3)})):this._listSearchTerm=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"directionStartType",{get:function(){return this._directionStartType},set:function(e){switch(this._directionStartType=e){case"myLocation":this.defineMapRouteFromMyLocation();break;case"office":this.defineMapRouteFromUserAddress()}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"listAggregates",{get:function(){return this.modelList.moduleAggregates},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){this.setDistanceUnitSystemFromPreferences(),f.prototype.ngOnInit.call(this)},e.prototype.ngAfterViewInit=function(){this.adjustMap(),f.prototype.ngAfterViewInit.call(this)},e.prototype.setRecords=function(){"search"==this.useMapFor&&f.prototype.setRecords.call(this)},e.prototype.handleBroadcastMessage=function(e){switch(e.messagetype){case"userpreferences.save":this.unitSystem=this.userpreferences.toUse.distance_unit_system||"METRIC",this.directionResult&&(this.directionResult.distance.text=this.convertDistanceToString(this.directionResult.distance.value));break;case"model.save":e.messagedata.module==this.model.module&&this.adjustMap()}f.prototype.handleBroadcastMessage.call(this,e),this.cdRef.detectChanges()},e.prototype.setDistanceUnitSystemFromPreferences=function(){this.unitSystem=this.userpreferences.toUse.distance_unit_system||"METRIC"},e.prototype.convertDistanceToString=function(e){if("IMPERIAL"!=this.unitSystem)return 1e3<e?Math.pow(+(e/1e3).toFixed(1),1)+" km":e+" m";e*=3.2808;return 5280<e?Math.pow(+(e/5280).toFixed(1),1)+" mile":Math.round(e)+" ft"},e.prototype.verifyPlaceLatLng=function(e){return!!e.placeId||this.verifyLatLng(e)},e.prototype.adjustMap=function(){"search"==this._useMapFor?(this.setCenterFromModel(),this.setMapOptionsForSearchUse()):(this.setMapOptionsForDirectionUse(),this.setRecordsFromModel(this.componentconfig.focusColor))},e.prototype.setRecordsFromModel=function(e){this.records=[{id:this.model.id,module:this.model.module,title:""+this.model.data.summary_text,lng:+this.model.data[this.lngName],lat:+this.model.data[this.latName],color:e}],this.cdRef.detectChanges()},e.prototype.setMapOptionsForSearchUse=function(){this.mapOptions={showCluster:this.componentconfig.showCluster,markerWithModelPopover:this.componentconfig.markerWithModelPopover,popoverComponent:this.componentconfig.popoverComponent,focusColor:this.componentconfig.focusColor,circle:this.mapOptions.circle,changed:{showCluster:!0,markerWithModelPopover:!0,circle:!0}},this.cdRef.detectChanges()},e.prototype.setMapOptionsForDirectionUse=function(){this.mapOptions={showCluster:!1,markerWithModelPopover:!1,circle:void 0,directionTravelMode:this.componentconfig.directionTravelMode,unitSystem:this.unitSystem,changed:{showCluster:!0,markerWithModelPopover:!0,circle:!0,directionTravelMode:!0,unitSystem:!0}},this.cdRef.detectChanges()},e.prototype.setCenterFromModel=function(){this.mapOptions.circle={center:{lng:+this.model.getField(this.lngName),lat:+this.model.getField(this.latName)},radius:void 0,radiusPercentage:this.componentconfig.radiusPercentage,color:this.componentconfig.circleColor,editable:!0},this.verifyLatLng(this.mapOptions.circle.center)||(this.mapOptions.circle=void 0)},e.prototype.setMapRoute=function(e){e=this.buildRoute(e);if(!this.verifyPlaceLatLng(e[0])||!this.verifyPlaceLatLng(e[1]))return this.isLoadingDirection=!1;this.routes=[e],this.cdRef.detectChanges()},e.prototype.defineMapRouteFromSearchAddress=function(e){"address"==this.directionStartType&&(this.isLoadingDirection=!0,e={lat:e.latitude,lng:e.longitude},this.setMapRoute(e))},e.prototype.defineMapRouteFromUserAddress=function(){var t=this;this.isLoadingDirection=!0,this.backend.get("Users",this.session.authData.userId,"details").subscribe(function(e){if(!(e&&e.address_street&&e.address_postalcode&&e.address_city))return t.toast.sendToast(t.language.getLabel("MSG_NO_OFFICE_ADDRESSE_DEFINED"),"error"),t.routes=[],t.isLoadingDirection=!1,t.cdRef.detectChanges();e=e.address_street+", "+e.address_postalcode+" "+e.address_city+", "+e.address_country;t.backend.getRequest("channels/groupware/gsuite/places/autocomplete/"+encodeURIComponent(e)).subscribe(function(e){e.predictions&&0<e.predictions.length?(e={placeId:e.predictions[0].place_id},t.setMapRoute(e)):(t.routes=[],t.isLoadingDirection=!1,t.cdRef.detectChanges())})})},e.prototype.defineMapRouteFromMyLocation=function(){var t=this;navigator.geolocation&&(this.isLoadingDirection=!0,navigator.geolocation.getCurrentPosition(function(e){e={lat:e.coords.latitude,lng:e.coords.longitude};t.setMapRoute(e)},function(){t.routes=[],t.isLoadingDirection=!1,t.cdRef.detectChanges()}))},e.prototype.buildRoute=function(e){return[e,{lat:+this.model.getField(this.latName),lng:+this.model.getField(this.lngName)}]},e.prototype.triggerSearch=function(){var e=this;this.zone.run(function(){e.modelList.searchTerm=e.listSearchTerm,e.modelList.reLoadList()})},e.prototype.setDirectionResult=function(e){this.isLoadingDirection=!1,this.directionResult=e,this.cdRef.detectChanges()},e.prototype.toggleFullScreen=function(t){var s=this;this.zone.runOutsideAngular(function(){var e;document.onfullscreenchange=function(){s.isFullScreenOn=!!document.fullscreenElement,s.cdRef.detectChanges()},s.isFullScreenOn?(e=document).exitFullscreen?e.exitFullscreen():e.webkitExitFullscreen?e.webkitExitFullscreen():e.mozCancelFullScreen?e.mozCancelFullScreen():e.msExitFullscreen&&e.msExitFullscreen():t.requestFullscreen?t.requestFullscreen():t.webkitRequestFullScreen?t.webkitRequestFullScreen():t.mozRequestFullscreen?t.mozRequestFullscreen():t.msRequestFullscreen&&t.msRequestFullscreen()})},e.prototype.onRangeMouseDown=function(e){var t=this,s=this.renderer.listen(e,"mouseup",function(){t.setMapOptionChanged("circleRadius"),s()})},__decorate([core_1.Input(),__metadata("design:type",Boolean)],e.prototype,"autoMapHeight",void 0),__decorate([core_1.Input("useMapOptions"),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],e.prototype,"applyUseMapOptions",null),__decorate([core_1.Component({selector:"spice-google-maps-record",template:'<div #mainContainer style="width: 100%" class="slds-grid slds-grid--vertical slds-theme--default slds-height_full"><div><div class="slds-grid slds-p-bottom--x-small" [class.slds-p-around--x-small]="isFullScreenOn"><system-input-radio-button-group *ngIf="showUseMapOptions" [(ngModel)]="useMapFor" [disabled]="isLoadingDirection || modelList.isLoading" [inputOptions]="useMapForOptions" class="slds-m-right--x-small"></system-input-radio-button-group><div *ngIf="useMapFor == \'search\'; else directionToolsContainer" class="slds-form-element slds-grid slds-grid--vertical-align-center slds-grow"><object-list-types></object-list-types><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right slds-grow"><system-utility-icon icon="search" size="x-small" addclasses="slds-input__icon"></system-utility-icon><input type="text" class="slds-input" [(ngModel)]="listSearchTerm" autocomplete="off" (keyup.enter)="triggerSearch()" [placeholder]="language.getModuleName(modelList.module)"></div><button class="slds-button slds-button--neutral slds-button--icon-border slds-m-left--xx-small slds-m-right--xxx-small" (click)="modelList.reLoadList()"><system-button-icon [icon]="\'refresh\'"></system-button-icon></button><object-listview-aggregates-button></object-listview-aggregates-button></div><ng-template #directionToolsContainer><div class="slds-grid slds-grow slds-grid--vertical-align-center"><system-input-radio-button-group [(ngModel)]="directionStartType" [disabled]="isLoadingDirection" [inputOptions]="directionStartOptions" class="slds-m-right--x-small"></system-input-radio-button-group><div class="slds-grow"><system-googleplaces-autocomplete [disabled]="!directionStartType || directionStartType != \'address\' || isLoadingDirection" (address)="defineMapRouteFromSearchAddress($event)"></system-googleplaces-autocomplete></div></div></ng-template><button (click)="toggleFullScreen(mainContainer)" system-title="LBL_FULL_SCREEN" class="slds-button slds-button--neutral slds-button--icon-border slds-m-left--xx-small slds-m-right--xxx-small slds-col--bump-left"><system-button-icon [icon]="!isFullScreenOn ? \'expand\' : \'contract\'"></system-button-icon></button></div><div class="slds-grid slds-theme--shade slds-p-around--xx-small slds-border--bottom slds-border--top slds-border--left slds-border--right"><div *ngIf="useMapFor == \'search\'; else directionInfoContainer" class="slds-grid slds-grid--vertical-align-center"><object-listview-header-details></object-listview-header-details><span class="slds-m-left--x-small slds-truncate">( {{records.length}} ) <system-label label="MSG_RECORDS_FOUND_WITH_GEO_DATA"></system-label></span> <a *ngIf="canLoadMore" (click)="loadMore()" class="slds-text-link slds-m-left--x-small"><system-label label="LBL_MORE"></system-label></a><div *ngIf="!!mapOptions.circle" class="slds-grid slds-grow"><div class="slds-grid slds-grid--vertical-align-center slds-grow"><div class="slds-slider slds-p-horizontal--x-small slds-grow"><input #inputRangeElement type="range" min="0" max="100" class="slds-slider__range" [(ngModel)]="mapOptions.circle.radius" (mousedown)="onRangeMouseDown(inputRangeElement)"></div><input type="number" [(ngModel)]="mapOptions.circle.radius" (ngModelChange)="setMapOptionChanged(\'circleRadius\')" class="slds-input" style="width: 40px; padding: .3rem; height: 32px; min-height: 32px;"> <span class="slds-p-horizontal--x-small">km</span></div></div></div><ng-template #directionInfoContainer><system-utility-icon [icon]="(mapOptions.directionTravelMode == \'DRIVING\' && !!directionResult) ? \'travel_and_places\' : \'info_alt\'" size="x-small" class="slds-m-right--x-small"></system-utility-icon><span *ngIf="directionResult; else infoTextContainer">{{directionResult.duration?.hours}} h {{directionResult.duration?.minutes}} min ( {{directionResult.distance?.text}} )</span><ng-template #infoTextContainer><span class="slds-truncate"><system-label label="MSG_SELECT_DIRECTION_TYPE"></system-label></span></ng-template></ng-template></div></div><div class="slds-border--left slds-border--right slds-border--bottom slds-grid slds-grid--vertical slds-grow" style="min-height: 0;" [system-overlay-loading-spinner]="isLoading || isLoadingDirection"><spice-google-maps [focusedRecordId]="focusedRecordId" [options]="mapOptions" [records]="records" [routes]="routes" (radiusChange)="onRadiusChange($event)" (directionChange)="setDirectionResult($event)" [style.height]="mapHeight" style="display: block"></spice-google-maps><object-list *ngIf="useMapFor == \'search\'" style="display: block; height: 250px; min-height: 250px; max-height: 500px"></object-list><div @animatepanel *ngIf="modelList.displayAggregates" class="slds-is-absolute slds-panel slds-panel--filters slds-filters__body slds-nowrap slds-scrollable--y" style="width: 320px; height: 100%; top:0; right: 0;z-index: 99;" [system-model-provider]="{module: modelList.module}"><div class="slds-filters__body slds-grid_vertical"><div class="slds-m-vertical--xx-small" *ngFor="let aggregate of listAggregates"><object-listview-aggregate [aggregate]="aggregate"></object-listview-aggregate></div></div></div></div></div>',changeDetection:core_1.ChangeDetectionStrategy.OnPush}),__metadata("design:paramtypes",[services_1.language,services_1.modellist,services_1.metadata,services_1.backend,core_1.IterableDiffers,core_1.ChangeDetectorRef,core_1.NgZone,services_1.session,services_1.model,core_1.ElementRef,core_1.Renderer2,services_1.broadcast,services_1.navigation,services_1.toast,services_1.userpreferences])],e)}(SpiceGoogleMapsList);exports.SpiceGoogleMapsRecord=SpiceGoogleMapsRecord;var SpiceMapSelector=function(){function SpiceMapSelector(e,t,s,o){this.zone=e,this.language=t,this.metadata=s,this.libloader=o,this.map={},this.circle={},this._radius=10,this.searchterm="",this.geoSearchemitter=new core_1.EventEmitter}return Object.defineProperty(SpiceMapSelector.prototype,"radius",{get:function(){return this._radius||10},set:function(e){this._radius=e,this.circle&&this.circle.setRadius(1e3*this._radius)},enumerable:!1,configurable:!0}),SpiceMapSelector.prototype.ngAfterViewInit=function(){var t=this;this.libloader.loadLib("maps.googleapis").subscribe(function(e){t.lat||t.lng?t.renderMap():navigator.geolocation.getCurrentPosition(function(e){t.lat=e.coords.latitude,t.lng=e.coords.longitude,t.renderMap(),t.reverseGeoCode()},function(){t.renderMap()})})},SpiceMapSelector.prototype.renderMap=function(){var e=this,t={lat:this.lat,lng:this.lng};this.map=new google.maps.Map(this.mapelement.element.nativeElement,{center:t,scrollwheel:!0,streetViewControl:!1,zoom:11,minZoom:8}),this.circle=new google.maps.Circle({strokeColor:"red",fillColor:"#dddddd",fillOpacity:.5,strokeWeight:2,clickable:!0,draggable:!0,editable:!0,zIndex:1,map:this.map,center:t,radius:1e3*this._radius}),google.maps.event.addListener(this.circle,"center_changed",function(){e.lat!=e.circle.getCenter().lat()&&e.lng!=e.circle.getCenter().lng()&&(e.lat=e.circle.getCenter().lat(),e.lng=e.circle.getCenter().lng(),e.reverseGeoCode())}),google.maps.event.addListener(this.circle,"radius_changed",function(){e._radius=Math.round(e.circle.getRadius()/100)/10}),this.reverseGeoCode()},SpiceMapSelector.prototype.reverseGeoCode=function(){var s=this;(new google.maps.Geocoder).geocode({location:{lat:this.lat,lng:this.lng}},function(e,t){s.address=e[0].formatted_address})},SpiceMapSelector.prototype.close=function(){this.self.destroy()},SpiceMapSelector.prototype.set=function(){this.geoSearchemitter.emit({radius:this._radius,lat:this.lat,lng:this.lng,address:this.address}),this.close()},SpiceMapSelector.prototype.clear=function(){this.geoSearchemitter.emit(!1),this.close()},SpiceMapSelector.prototype.setDetails=function(e){this.lat=e.address.latitude,this.lng=e.address.longitude,this.address=[e.name,e.formatted_address].join(", "),this.map.setCenter({lat:e.address.latitude,lng:e.address.longitude}),this.circle.setCenter({lat:e.address.latitude,lng:e.address.longitude})},Object.defineProperty(SpiceMapSelector.prototype,"mapStyle",{get:function(){this.headerinput.element.nativeElement.getBoundingClientRect();return{width:"100%",height:"calc(100% - "+this.headerinput.element.nativeElement.getBoundingClientRect().height+"px)"}},enumerable:!1,configurable:!0}),__decorate([core_1.ViewChild("mapelement",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],SpiceMapSelector.prototype,"mapelement",void 0),__decorate([core_1.ViewChild("headerinput",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],SpiceMapSelector.prototype,"headerinput",void 0),__decorate([core_1.Component({selector:"spice-map-selector",template:'<system-modal size="large"><system-modal-header (close)="close()"></system-modal-header><system-modal-content margin="none" [grow]="true"><div #headerinput class="slds-grid slds-grid_vertical-align-center slds-p-around--x-small"><system-googleplaces-search class="slds-size--2-of-3" [(ngModel)]="searchterm" (details)="setDetails($event)"></system-googleplaces-search><div class="slds-grid slds-grid_vertical-align-center slds-size--1-of-3 slds-p-left--x-small"><div class="slds-slider slds-p-horizontal--x-small slds-grow"><input type="range" min="0" max="100" class="slds-slider__range" [(ngModel)]="radius"></div><input style="width: 60px;" type="number" class="slds-input" [(ngModel)]="radius"> <span class="slds-p-horizontal--x-small">km</span></div></div><div #mapelement [ngStyle]="mapStyle"></div></system-modal-content><system-modal-footer>{{address}} <button class="slds-button slds-button--neutral" (click)="clear()"><system-label label="LBL_CLEAR"></system-label></button> <button class="slds-button slds-button--neutral" (click)="set()"><system-label label="LBL_SET"></system-label></button> <button class="slds-button slds-button--neutral" (click)="close()"><system-label label="LBL_CLOSE"></system-label></button></system-modal-footer></system-modal>'}),__metadata("design:paramtypes",[core_1.NgZone,services_1.language,services_1.metadata,services_1.libloader])],SpiceMapSelector)}();exports.SpiceMapSelector=SpiceMapSelector;var SpiceGoogleMaps=function(){function e(e,t,s,o,i,n,r,a,l){this.language=e,this.model=t,this.libLoader=s,this.footer=o,this.metadata=i,this.renderer=n,this.zone=r,this.injector=a,this.toast=l,this.records=[],this.routes=[],this.radiusChange=new core_1.EventEmitter,this.centerChange=new core_1.EventEmitter,this.directionChange=new core_1.EventEmitter,this.mapIdleChange=new core_1.EventEmitter,this.popoverComponentRef=null,this.markers=[],this.directionsRenderers=[],this.isMapIdled=!1}return e.prototype.ngOnChanges=function(e){var t=this;this.isMapIdled&&this.zone.runOutsideAngular(function(){e.records&&t.setMarkers(),e.focusedRecordId&&t.setFocusedMarker(),e.routes&&t.renderRoutes(),e.options&&t.handleOptionsChange()})},e.prototype.ngAfterViewInit=function(){this.loadNecessaryLibraries()},e.prototype.ngOnDestroy=function(){google.maps.event.clearInstanceListeners(this.map),this.clearMarkers(),this.clearMyLocationMarker(),this.removeReCenterControlListener(),this.removeCircle(),this.removeFixedCircle(),this.closePopover(),this.clearFocusedMarker()},e.prototype.convertDistanceToString=function(e){if("IMPERIAL"!=this.options.unitSystem)return 1e3<e?Math.pow(+(e/1e3).toFixed(1),1)+" km":e+" m";e*=3.2808;return 5280<e?Math.pow(+(e/5280).toFixed(1),1)+" mile":Math.round(e)+" ft"},e.prototype.generateMarkerColor=function(e){return{path:"M 0,0 L -43.3,-75 A 50 50 1 1 1 43.30,-75 L 0,0 z",strokeColor:"#fff",strokeWeight:1,fillOpacity:1,scale:.25,anchor:{x:4.5,y:5},fillColor:0==e.indexOf("#")?e:"#"+e}},e.prototype.createCircle=function(e){var t,s;window.google&&(this[t=e?"fixedCircle":"circle"]&&this.removeCircle(t),(s=this.options[t].center)&&this.verifyLatLng(s)||(s={lat:this.map.getCenter().lat(),lng:this.map.getCenter().lng()},this.reverseGeoCode(s),this.options[t].center=s),this[t]=new google.maps.Circle(this.generateCircleOptions(this.options[t],e)),e||(this.setCircleListeners(),this.map.setCenter(s)))},e.prototype.verifyLatLng=function(e){return!(!e.lng||isNaN(e.lng)||!e.lat||isNaN(e.lat))},e.prototype.generateCircleOptions=function(e,t){var s=1e3*(e.radius||5),o=e.radiusPercentage||80;return e.radius||t||!this.map.getBounds()||!o||isNaN(o)||(s=this.setRadiusFromMapDimensions(o)),{strokeColor:e.color,fillOpacity:0,strokeWeight:2,clickable:!1,editable:e.editable,draggable:e.draggable,zIndex:1,map:this.map,center:e.center,radius:s}},e.prototype.setRadiusFromMapDimensions=function(e){var t=this,s=google.maps.geometry.spherical,o=this.map.getBounds().getNorthEast(),i=this.map.getBounds().getSouthWest(),n=new google.maps.LatLng(i.lat(),o.lng()),i=new google.maps.LatLng(o.lat(),i.lng()),i=s.computeDistanceBetween(o,i),n=s.computeDistanceBetween(o,n),r=(n<i?n:i)/2*(e/100);return this.zone.run(function(){return t.radiusChange.emit(Math.round(r/100)/10)}),r},e.prototype.setFocusedMarker=function(){var s=this;this.clearFocusedMarker(),this.markers.some(function(e){if(e.id==s.focusedRecordId){var t=s.options.focusColor||"#1A73E8";return e.setIcon(s.generateMarkerColor(t)),s.markerCluster&&(s.markerCluster.removeMarker(e),e.setMap(s.map)),s.mapBounds=new google.maps.LatLngBounds,s.mapBounds.extend(e.position),s.fitMapBounds(),s.focusedMarker=e,!0}})},e.prototype.clearFocusedMarker=function(){this.focusedMarker&&(this.markerCluster&&(this.markerCluster.removeMarker(this.focusedMarker),this.markerCluster.addMarker(this.focusedMarker)),this.focusedMarker.setIcon(this.focusedMarker.defaultColor?this.generateMarkerColor(this.focusedMarker.defaultColor):null),this.focusedMarker=void 0)},e.prototype.handleOptionsChange=function(){this.options.fixedCircle?this.options.changed.fixedCircle&&(this.clearRoutes(),this.createFixedCircle()):this.removeFixedCircle(),this.options.circle?this.options.changed.circle?(this.clearRoutes(),this.createCircle()):this.options.changed.circleRadius?this.circle.setRadius(1e3*this.options.circle.radius):this.options.changed.circleCenter?this.circle.setCenter(this.options.circle.center):this.options.changed.circleEditable&&(this.circle.setEditable(this.options.circle.editable),this.circle.setDraggable(this.options.circle.draggable)):this.removeCircle(),this.options.showCluster?this.options.changed.showCluster&&this.setMarkerCluster():this.removeMarkerClusterMarkers(),this.options.showMyLocation?this.options.changed.showMyLocation&&this.setCurrentLocationMarker():this.clearMyLocationMarker()},e.prototype.renderRoutes=function(){var o=this;if(this.removeCircle(),this.removeFixedCircle(),!window.google||0==this.routes.length)return this.clearRoutes();this.directionsService||(this.directionsService=new google.maps.DirectionsService),this.routes.forEach(function(e){var t,s;e.length<2||(t=e.splice(0,1)[0],s=e.splice(e.length-1,1)[0],o.renderRoute(t,s,e))})},e.prototype.renderRoute=function(e,t,s){var i=this;this.directionsService.route({origin:e,destination:t,waypoints:s,travelMode:this.options.directionTravelMode||"DRIVING",unitSystem:google.maps.UnitSystem[this.options.unitSystem||"METRIC"]},function(e,t){var s,o;"OK"===t?((s=new google.maps.DirectionsRenderer).setMap(i.map),s.setDirections(e),i.directionsRenderers.push(s),i.clearMarkers(),o=i.calculateDirectionData(e.routes),i.zone.run(function(){return i.directionChange.emit(o)})):(i.toast.sendToast(i.language.getLabel("MSG_DIRECTION_REQUEST_FAILED")+" "+t,"error"),i.zone.run(function(){return i.directionChange.emit(null)}))})},e.prototype.clearRoutes=function(){0!=this.directionsRenderers.length&&(this.directionsRenderers.forEach(function(e){return e.setMap(null)}),this.directionsRenderers=[])},e.prototype.removeReCenterControlListener=function(){this.centerControlListener&&(this.centerControlListener(),this.centerControlListener=null)},e.prototype.loadNecessaryLibraries=function(){var e=this;this.libLoader.loadLib("maps.googleapis").subscribe(function(){e.zone.runOutsideAngular(function(){return e.renderMap()}),e.libLoader.loadLib("MarkerClustererPlus").subscribe(function(){return e.setMarkerCluster()})})},e.prototype.renderMap=function(){var e=this;this.map=new google.maps.Map(this.mapContainer.element.nativeElement,{center:{lat:48.168588,lng:16.346818},zoom:11,streetViewControl:!1,fullscreenControl:!1}),this.mapBounds=new google.maps.LatLngBounds,google.maps.event.addListener(this.map,"click",function(){return e.closePopover()}),google.maps.event.addListenerOnce(this.map,"idle",function(){e.isMapIdled=!0,e.options.showMyLocation&&e.setCurrentLocationMarker(),e.options.fixedCircle&&(e.options.fixedCircle.center&&e.map.setCenter(e.options.fixedCircle.center),e.createFixedCircle()),e.options.circle&&(e.options.circle.center&&e.map.setCenter(e.options.circle.center),e.createCircle()),e.setMarkers()}),this.defineReCenterControl(),this.routes&&0<this.routes.length&&(this.directionsService=new google.maps.DirectionsService)},e.prototype.setCurrentLocationMarker=function(){var t=this;this.clearMyLocationMarker(),window.google&&navigator.geolocation&&navigator.geolocation.getCurrentPosition(function(e){e={map:t.map,icon:{path:google.maps.SymbolPath.CIRCLE,scale:8,strokeColor:"#fff",strokeWeight:2,fillOpacity:1,fillColor:"#CA1B21"},position:{lat:e.coords.latitude,lng:e.coords.longitude}};t.myLocationMarker=new google.maps.Marker(e)})},e.prototype.clearMyLocationMarker=function(){this.myLocationMarker&&(this.myLocationMarker.setMap(null),google.maps.event.clearInstanceListeners(this.myLocationMarker),this.myLocationMarker=void 0)},e.prototype.defineReCenterControl=function(){var e=this,t=document.createElement("div");t.title=this.language.getLabel("LBL_RE_CENTER"),t.classList.add("spice-google-maps-control-recenter");var s=document.createElement("div");s.classList.add("spice-google-maps-control-recenter-icon"),t.appendChild(s),this.centerControlListener=this.renderer.listen(t,"click",function(){e.options.circle?e.map.setCenter(e.circle.getCenter()):e.fitMapBounds()}),this.map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(t)},e.prototype.fitMapBounds=function(){this.map.setOptions({maxZoom:14}),this.map.fitBounds(this.mapBounds),this.map.setOptions({maxZoom:null})},e.prototype.setMarkerCluster=function(){!window.MarkerClusterer||0==this.markers.length||0<this.routes.length||(this.removeMarkerClusterMarkers(),this.markerCluster?this.markerCluster.addMarkers(this.markers):this.markerCluster=new MarkerClusterer(this.map,this.markers,{imagePath:"vendor/google-maps/MarkerClustererPlus/images/m"}))},e.prototype.removeMarkerClusterMarkers=function(){this.markerCluster&&this.markerCluster.clearMarkers()},e.prototype.createFixedCircle=function(){var e=this;this.zone.runOutsideAngular(function(){return e.createCircle(!0)})},e.prototype.setCircleListeners=function(){var e=this;this.circle.addListener("radius_changed",function(){e.zone.run(function(){return e.radiusChange.emit(Math.round(e.circle.getRadius()/100)/10)})}),this.circle.addListener("center_changed",function(){e.circle.getCenter().toString()!==e.options.circle.center.toString()&&(e.options.circle.draggable&&e.options.circle.editable?e.reverseGeoCode({lat:e.circle.getCenter().lat(),lng:e.circle.getCenter().lng()}):e.zone.runOutsideAngular(function(){return e.createCircle()}))})},e.prototype.reverseGeoCode=function(s){var o=this;(new google.maps.Geocoder).geocode({location:s},function(e,t){"OK"===t&&o.zone.run(function(){return o.centerChange.emit(__assign({address:e[0].formatted_address},s))})})},e.prototype.removeFixedCircle=function(){this.removeCircle("fixedCircle")},e.prototype.removeCircle=function(e){this[e=void 0===e?"circle":e]&&(this[e].setMap(null),google.maps.event.clearInstanceListeners(this[e]),this[e]=void 0)},e.prototype.clearMarkers=function(){this.removeMarkerClusterMarkers(),this.markers.forEach(function(e){e.setMap(null),google.maps.event.clearInstanceListeners(e)}),this.markers=[],this.options.circle||this.map.setZoom(11)},e.prototype.setMarkers=function(){var s=this;this.map&&(this.mapBounds=new google.maps.LatLngBounds,this.clearMarkers(),this.records.forEach(function(t){var e;s.verifyLatLng(t)&&(e={id:t.id,map:s.map,title:t.title||"",animation:google.maps.Animation.DROP,position:{lat:+t.lat,lng:+t.lng}},t.color&&(e.icon=s.generateMarkerColor(t.color)),(e=new google.maps.Marker(e)).defaultColor=t.color,s.mapBounds.extend(e.position),s.options.markerWithModelPopover&&e.addListener("click",function(e){s.zone.run(function(){return s.renderPopover(t.id,t.module,e)})}),s.markers.push(e))}),this.options.showCluster&&this.setMarkerCluster(),this.options.circle||this.fitMapBounds())},e.prototype.calculateDirectionData=function(e){var t={value:0,text:""},s=0;return e.forEach(function(e){e.legs.forEach(function(e){t.value+=e.distance.value,s+=e.duration.value})}),t.text=this.convertDistanceToString(t.value),{distance:t,duration:{minutes:Math.round(60*(s/3600-Math.floor(s/3600))),hours:Math.floor(s/3600)}}},e.prototype.closePopover=function(){var e=this;this.popoverComponentRef&&this.zone.run(function(){return e.popoverComponentRef.instance.closePopover(!0)})},e.prototype.renderPopover=function(t,s,e){var o,i=this;this.closePopover(),_.toArray(e).some(function(e){if(e instanceof MouseEvent)return o=e.target,!0}),o&&(e=this.options.popoverComponent||"ObjectModelPopover",this.metadata.addComponent(e,this.footer.footercontainer,this.injector).subscribe(function(e){e.instance.popoverid=t,e.instance.popovermodule=s,e.instance.parentElementRef={nativeElement:o},e.changeDetectorRef.detectChanges(),i.popoverComponentRef=e}))},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"options",void 0),__decorate([core_1.Input(),__metadata("design:type",Array)],e.prototype,"records",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"focusedRecordId",void 0),__decorate([core_1.Input(),__metadata("design:type",Array)],e.prototype,"routes",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"radiusChange",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"centerChange",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"directionChange",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"mapIdleChange",void 0),__decorate([core_1.ViewChild("mapContainer",{read:core_1.ViewContainerRef,static:!1}),__metadata("design:type",core_1.ViewContainerRef)],e.prototype,"mapContainer",void 0),__decorate([core_1.Component({selector:"spice-google-maps",template:'<div #mapContainer style="width: 100%; height: 100%; overflow: hidden;"></div>',changeDetection:core_1.ChangeDetectionStrategy.OnPush}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.libloader,services_1.footer,services_1.metadata,core_1.Renderer2,core_1.NgZone,core_1.Injector,services_1.toast])],e)}();exports.SpiceGoogleMaps=SpiceGoogleMaps;var SpiceMapGeoDataField=function(){function SpiceMapGeoDataField(e,t,s,o,i,n,r){this.model=e,this.metadata=t,this.navigation=s,this.broadcast=o,this.modal=i,this.injector=n,this.cdRef=r,this.hasGeoData=!1}return SpiceMapGeoDataField.prototype.ngOnInit=function(){this.checkModelGeoData()},SpiceMapGeoDataField.prototype.setHasGeoData=function(){this.hasGeoData=!0,this.cdRef.detectChanges()},SpiceMapGeoDataField.prototype.emitBroadcastMessage=function(){var e={tabId:this.navigation.activeTabObject.id,record:this.model.data};this.broadcast.broadcastMessage("map.focus",e)},SpiceMapGeoDataField.prototype.checkModelGeoData=function(){var e,t=this.metadata.getModuleDefs(this.model.module);t&&t.ftsgeo&&(e=this.model.getField(t.ftsgeo.longitude_field),t=this.model.getField(t.ftsgeo.latitude_field),e&&!isNaN(e)&&t&&!isNaN(t)?this.setHasGeoData():this.cdRef.detach())},SpiceMapGeoDataField.prototype.openDirectionModal=function(){this.modal.openModal("SpiceGoogleMapsDirectionModal",!0,this.injector)},__decorate([core_1.Component({selector:"spice-map-geo-data-field",template:'<div *ngIf="hasGeoData" class="slds-button-group"><button (click)="emitBroadcastMessage()" system-title="LBL_GEO_DATA" class="slds-button slds-button--icon-border-filled slds-button-group-item" style="height: 24px; width:24px;"><system-button-icon icon="world" size="medium"></system-button-icon></button> <button (click)="openDirectionModal()" system-title="LBL_ROUTE_PLANNER" class="slds-button slds-button--icon-border-filled slds-button-group-item" style="height: 24px; width:24px;"><system-button-icon icon="travel_and_places" size="medium"></system-button-icon></button></div>',changeDetection:core_1.ChangeDetectionStrategy.OnPush}),__metadata("design:paramtypes",[services_1.model,services_1.metadata,services_1.navigation,services_1.broadcast,services_1.modal,core_1.Injector,core_1.ChangeDetectorRef])],SpiceMapGeoDataField)}();exports.SpiceMapGeoDataField=SpiceMapGeoDataField;var SpiceGoogleMapsDirectionModal=function(){function SpiceGoogleMapsDirectionModal(e,t,s){this.cdRef=e,this.metadata=t,this.model=s,this.self={},this.useMapOptions={direction:!0,search:!1}}return SpiceGoogleMapsDirectionModal.prototype.ngOnInit=function(){this.loadComponentConfigs()},SpiceGoogleMapsDirectionModal.prototype.loadComponentConfigs=function(){this.componentconfig||(this.componentconfig=this.metadata.getComponentConfig("SpiceGoogleMapsDirectionModal",this.model.module)),this.componentconfig||(this.componentconfig={}),this.componentconfig.directionTravelMode&&-1!=["DRIVING","WALKING","TRANSIT","BICYCLING"].indexOf(this.componentconfig.directionTravelMode)||(this.componentconfig.directionTravelMode="DRIVING"),this.componentconfig.focusColor||(this.componentconfig.focusColor="#1A73E8")},SpiceGoogleMapsDirectionModal.prototype.close=function(){this.cdRef.detach(),this.self.destroy()},__decorate([core_1.Component({selector:"spice-google-maps-direction-modal",template:'<system-modal><system-modal-header (close)="self.destroy()"><system-label label="LBL_DIRECTION"></system-label></system-modal-header><system-modal-content [grow]="true"><spice-google-maps-record [componentconfig]="componentconfig" [autoMapHeight]="true" [useMapOptions]="useMapOptions"></spice-google-maps-record></system-modal-content><system-modal-footer><button class="slds-button slds-button--neutral" (click)="close()"><system-label label="LBL_CANCEL"></system-label></button></system-modal-footer></system-modal>',changeDetection:core_1.ChangeDetectionStrategy.OnPush}),__metadata("design:paramtypes",[core_1.ChangeDetectorRef,services_1.metadata,services_1.model])],SpiceGoogleMapsDirectionModal)}();exports.SpiceGoogleMapsDirectionModal=SpiceGoogleMapsDirectionModal;var ModuleSpiceMap=function(){function ModuleSpiceMap(){}return __decorate([core_1.NgModule({imports:[common_1.CommonModule,forms_1.FormsModule,objectfields_1.ObjectFields,globalcomponents_1.GlobalComponents,objectcomponents_1.ObjectComponents,systemcomponents_1.SystemComponents,directives_1.DirectivesModule],declarations:[SpiceMap,SpiceGoogleMapsListHeader,SpiceGoogleMapsList,SpiceGoogleMapsRecordContainer,SpiceGoogleMapsRecord,SpiceGoogleMaps,SpiceMapSelector,SpiceMapGeoDataField,SpiceGoogleMapsDirectionModal],exports:[SpiceGoogleMaps,SpiceMapGeoDataField,SpiceGoogleMapsRecord]})],ModuleSpiceMap)}();exports.ModuleSpiceMap=ModuleSpiceMap;