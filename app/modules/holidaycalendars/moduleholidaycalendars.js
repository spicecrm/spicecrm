/** 
 * Â© 2015 - 2021 aac services k.s. All rights reserved.
 * release: 2021.02.001
 * date: 2021-07-16 09:05:07
 * build: 2021.02.001.1626419107136
 **/
"use strict";var __decorate=this&&this.__decorate||function(e,t,s,a){var l,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,s):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,s,a);else for(var d=e.length-1;0<=d;d--)(l=e[d])&&(i=(o<3?l(i):3<o?l(t,s,i):l(t,s))||i);return 3<o&&i&&Object.defineProperty(t,s,i),i},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ModuleHolidayCalendars=exports.HolidayCalendarListGetHolidaysButton=exports.HolidayCalendarListGetHolidaysModal=exports.HolidayCalendarListDays=exports.HolidayCalendarList=void 0;var common_1=require("@angular/common"),core_1=require("@angular/core"),forms_1=require("@angular/forms"),directives_1=require("../../directives/directives"),objectfields_1=require("../../objectfields/objectfields"),globalcomponents_1=require("../../globalcomponents/globalcomponents"),objectcomponents_1=require("../../objectcomponents/objectcomponents"),systemcomponents_1=require("../../systemcomponents/systemcomponents"),services_1=require("../../services/services"),HolidayCalendarList=function(){function HolidayCalendarList(e,t,s,a){this.language=e,this.modellist=t,this.model=s,this.metadata=a;a=this.metadata.getComponentConfig("HolidayCalendarList","SystemHolidayCalendars");this.actionset=a.actionset}return HolidayCalendarList.prototype.ngOnInit=function(){this.modellist.initialize("SystemHolidayCalendars")},HolidayCalendarList.prototype.refresh=function(){this.activeCalendar=void 0,this.modellist.reLoadList()},Object.defineProperty(HolidayCalendarList.prototype,"activeCalendar",{get:function(){return this._activeCalendarID},set:function(e){this._activeCalendarID=e},enumerable:!1,configurable:!0}),HolidayCalendarList.prototype.addCalendar=function(){this.model.module="SystemHolidayCalendars",this.model.initialize(),this.model.addModel()},HolidayCalendarList.prototype.addDay=function(){this.model.module="SystemHolidayCalendarDays",this.model.initialize(),this.model.addModel(null,null,{systemholidaycalendar_id:this.activeCalendar})},__decorate([core_1.Component({template:'<div class="slds-grid slds-grid_vertical-align-center slds-grid--align-spread slds-p-around--small"><h2 class="slds-text-heading_medium"><system-label-modulename module="SystemHolidayCalendars"></system-label-modulename></h2><div class="slds-grid"><button class="slds-button slds-button--neutral" (click)="addCalendar()"><system-button-icon icon="add"></system-button-icon><system-label label="LBL_CALENDAR"></system-label></button> <button [disabled]="!activeCalendar" class="slds-button slds-button--neutral" (click)="addDay()"><system-button-icon icon="add"></system-button-icon><system-label label="LBL_DAY"></system-label></button> <button class="slds-button slds-button_icon slds-button_icon-border-filled" (click)="refresh()"><system-button-icon icon="refresh"></system-button-icon></button></div></div><div class="slds-grid"><div class="slds-size--1-of-4 slds-theme--default" system-to-bottom-noscroll system-view-provider><div class="slds-box--border slds-m-around--xx-small" *ngFor="let listItem of modellist.listData.list" [ngClass]="{\'slds-theme--inverse\': listItem.id == activeCalendar}" (click)="activeCalendar = listItem.id"><div class="slds-p-around--x-small slds-grid slds-grid--vertical-align-center slds-grid--align-spread" [system-model-provider]="{module: \'SystemHolidayCalendars\', data: listItem}"><span>{{listItem.name}}</span><object-action-menu [buttonsize]="\'x-small\'" [actionset]="actionset"></object-action-menu></div></div></div><div class="slds-size--3-of-4 slds-border--left slds-theme--shade"><holiday-calendar-list-days *ngIf="activeCalendar" [calendarid]="activeCalendar"></holiday-calendar-list-days></div></div>',providers:[services_1.modellist,services_1.model]}),__metadata("design:paramtypes",[services_1.language,services_1.modellist,services_1.model,services_1.metadata])],HolidayCalendarList)}();exports.HolidayCalendarList=HolidayCalendarList;var HolidayCalendarListDays=function(){function HolidayCalendarListDays(e,t,s,a){this.language=e,this.model=t,this.metadata=s,this.relatedmodels=a,this.relatedmodels.module="SystemHolidayCalendars",this.relatedmodels.relatedModule="SystemHolidayCalendarDays",this.relatedmodels.linkName="systemholidaycalendardays",this.relatedmodels.loaditems=1e3,this.componentconfig=this.metadata.getComponentConfig("HolidayCalendarListDays","SystemHolidayCalendarDays"),this.listfields=this.metadata.getFieldSetFields(this.componentconfig.fieldset)}return HolidayCalendarListDays.prototype.ngOnChanges=function(e){this.relatedmodels.id=this.calendarid,this.relatedmodels.resetData(),this.relatedmodels.getData()},__decorate([core_1.Input(),__metadata("design:type",String)],HolidayCalendarListDays.prototype,"calendarid",void 0),__decorate([core_1.Component({selector:"holiday-calendar-list-days",template:'<div system-to-bottom><object-relatedlist-table [listfields]="listfields" [listitemactionset]="componentconfig.actionset"></object-relatedlist-table></div>',providers:[services_1.relatedmodels,services_1.model]}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.metadata,services_1.relatedmodels])],HolidayCalendarListDays)}();exports.HolidayCalendarListDays=HolidayCalendarListDays;var HolidayCalendarListGetHolidaysModal=function(){function HolidayCalendarListGetHolidaysModal(e,t,s){this.backend=e,this.model=t,this.toast=s}return HolidayCalendarListGetHolidaysModal.prototype.close=function(){this.self.destroy()},HolidayCalendarListGetHolidaysModal.prototype.load=function(){var t=this;this.backend.getRequest("module/SystemHolidayCalendars/"+this.model.id+"/calendarific/"+this.country+"/"+this.year).subscribe(function(e){t.close()},function(e){t.toast.sendToast("Error loading Holidays","error"),console.log(e)})},__decorate([core_1.Component({template:'<system-modal size="prompt"><system-modal-header (close)="close()"><system-label label="LBL_LOAD_HOLIDAYS"></system-label></system-modal-header><system-modal-content><div class="slds-grid slds-grid--vertical"><div class="slds-grid slds-p-vertical--x-small"><system-label class="slds-size--1-of-2" label="LBL_COUNTRY"></system-label> <input maxlength="2" class="slds-input slds-size--1-of-2" type="text" [(ngModel)]="country"></div><div class="slds-grid slds-p-vertical--x-small"><system-label class="slds-size--1-of-2" label="LBL_YEAR"></system-label> <input maxlength="4" class="slds-input slds-size--1-of-2" type="number" [(ngModel)]="year"></div></div></system-modal-content><system-modal-footer><button class="slds-button slds-button--neutral" (click)="close()"><system-label label="LBL_CANCEL"></system-label></button> <button class="slds-button slds-button--brand" (click)="load()"><system-label label="LBL_LOAD"></system-label></button></system-modal-footer></system-modal>'}),__metadata("design:paramtypes",[services_1.backend,services_1.model,services_1.toast])],HolidayCalendarListGetHolidaysModal)}();exports.HolidayCalendarListGetHolidaysModal=HolidayCalendarListGetHolidaysModal;var HolidayCalendarListGetHolidaysButton=function(){function HolidayCalendarListGetHolidaysButton(e,t,s,a){this.model=e,this.modal=t,this.configuration=s,this.injector=a,this.disabled=!0,this.enableButton()}return HolidayCalendarListGetHolidaysButton.prototype.enableButton=function(){var e=this.configuration.getCapabilityConfig("holidaycalendars");null!=e&&e.calendarific&&(this.disabled=!1)},HolidayCalendarListGetHolidaysButton.prototype.execute=function(){this.modal.openModal("HolidayCalendarListGetHolidaysModal",!0,this.injector)},__decorate([core_1.Component({template:'<system-label label="LBL_LOAD_HOLIDAYS"></system-label>'}),__metadata("design:paramtypes",[services_1.model,services_1.modal,services_1.configurationService,core_1.Injector])],HolidayCalendarListGetHolidaysButton)}();exports.HolidayCalendarListGetHolidaysButton=HolidayCalendarListGetHolidaysButton;var ModuleHolidayCalendars=function(){function ModuleHolidayCalendars(){}return __decorate([core_1.NgModule({imports:[common_1.CommonModule,forms_1.FormsModule,objectfields_1.ObjectFields,globalcomponents_1.GlobalComponents,objectcomponents_1.ObjectComponents,systemcomponents_1.SystemComponents,directives_1.DirectivesModule],declarations:[HolidayCalendarList,HolidayCalendarListDays,HolidayCalendarListGetHolidaysModal,HolidayCalendarListGetHolidaysButton]})],ModuleHolidayCalendars)}();exports.ModuleHolidayCalendars=ModuleHolidayCalendars;